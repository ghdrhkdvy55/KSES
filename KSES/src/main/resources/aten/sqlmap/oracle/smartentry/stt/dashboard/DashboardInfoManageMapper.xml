<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.stt.dashboard.mapper.DashboardInfoManageMapper">

    <select id="selectEntryMaximumNumber" resultType="int">
        SELECT
            SUM(CLASS_CNT) +
            SUM(CASE WHEN CENTER_STAND_MAX IS NULL THEN 0 ELSE CENTER_STAND_MAX END)
        FROM (
             SELECT
                 (   SELECT COUNT(*)
                     FROM TSEB_PART_INFO_D P
                          INNER JOIN TSEB_SEAT_INFO_D S ON S.CENTER_CD = P.CENTER_CD AND S.PART_CD = P.PART_CD
                     WHERE P.CENTER_CD = M.CENTER_CD
                       AND P.USE_YN = 'Y'
                       AND P.PART_CLASS IS NOT NULL
                       AND S.USE_YN = 'Y'
                 ) AS CLASS_CNT,
                 (   SELECT CENTER_STAND_MAX
                     FROM TSEB_CENTER_INFO_M
                     WHERE CENTER_CD = M.CENTER_CD
                       AND CENTER_STAND_YN = 'Y'
                 ) AS CENTER_STAND_MAX
             FROM TSEB_CENTER_INFO_M M
             WHERE M.USE_YN = 'Y'
         ) TB
    </select>

    <select id="selectTodayResvNumber" resultType="int">
        SELECT COUNT(*)
        FROM TSER_RESV_INFO_I
        WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN RESV_START_DT AND RESV_END_DT
            AND RESV_STATE IN
        <foreach collection="resvStates" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectDashboardList" resultType="lmap">
        WITH CTE_CENTER AS (
            SELECT CENTER_CD, CENTER_NM, CENTER_ORDER FROM TSEB_CENTER_INFO_M WHERE USE_YN = 'Y'
        )
        SELECT
            CENTER_CD, CENTER_NM, CLASS_4, CLASS_3, CLASS_2, CLASS_1, STAND,
            (CLASS_4 + CLASS_3 + CLASS_2 + CLASS_1 + STAND)  AS ENTRY_NUMBER,
            (CLASS_CNT + CENTER_STAND_MAX) AS MAXIMUM_NUMBER
        FROM (
            SELECT M.CENTER_CD,M.CENTER_NM, M.CENTER_ORDER,
                NVL(SUM(CLASS_4), 0) AS CLASS_4,
                NVL(SUM(CLASS_3), 0) AS CLASS_3,
                NVL(SUM(CLASS_2), 0) AS CLASS_2,
                NVL(SUM(CLASS_1), 0) AS CLASS_1,
                NVL(SUM(STAND), 0) AS STAND,
                (   SELECT COUNT(*)
                    FROM TSEB_PART_INFO_D P
                        INNER JOIN TSEB_SEAT_INFO_D S ON S.CENTER_CD = P.CENTER_CD AND S.PART_CD = P.PART_CD
                    WHERE P.CENTER_CD = M.CENTER_CD
                        AND P.USE_YN = 'Y'
                        AND P.PART_CLASS IS NOT NULL
                        AND S.USE_YN = 'Y'
                ) AS CLASS_CNT,
                NVL((SELECT CENTER_STAND_MAX FROM TSEB_CENTER_INFO_M WHERE CENTER_CD = M.CENTER_CD AND CENTER_STAND_YN = 'Y'), 0) AS CENTER_STAND_MAX
            FROM CTE_CENTER M
                LEFT OUTER JOIN (
                    SELECT
                        CASE WHEN R.RESV_ENTRY_DVSN = 'ENTRY_DVSN_2' AND P.PART_CLASS = 'SEAT_CLASS_4' THEN 1 ELSE 0 END AS CLASS_4,
                        CASE WHEN R.RESV_ENTRY_DVSN = 'ENTRY_DVSN_2' AND P.PART_CLASS = 'SEAT_CLASS_3' THEN 1 ELSE 0 END AS CLASS_3,
                        CASE WHEN R.RESV_ENTRY_DVSN = 'ENTRY_DVSN_2' AND P.PART_CLASS = 'SEAT_CLASS_2' THEN 1 ELSE 0 END AS CLASS_2,
                        CASE WHEN R.RESV_ENTRY_DVSN = 'ENTRY_DVSN_2' AND P.PART_CLASS = 'SEAT_CLASS_1' THEN 1 ELSE 0 END AS CLASS_1,
                        CASE WHEN R.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1' THEN 1 ELSE 0 END AS STAND,
                        M.CENTER_CD, P.PART_CD, P.PART_CLASS
                    FROM TSER_RESV_INFO_I R
                        INNER JOIN CTE_CENTER M ON R.CENTER_CD = M.CENTER_CD
                        LEFT OUTER JOIN TSEB_PART_INFO_D P ON R.PART_CD = P.PART_CD
                    WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN RESV_START_DT AND RESV_END_DT
                        AND R.RESV_STATE IN ('RESV_STATE_2', 'RESV_STATE_3')
                ) A ON M.CENTER_CD = A.CENTER_CD
            GROUP BY M.CENTER_CD, M.CENTER_NM, M.CENTER_ORDER
        ) TB
        ORDER BY CENTER_ORDER
    </select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.bld.seat.mapper.SeatInfoManageMapper">
	<select id="selectSeatInfoList" resultType="lmap">
		SELECT TB.* FROM 
		(
			SELECT  
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT,
				ROW_NUMBER() OVER (ORDER BY A.SEAT_ORDER DESC) AS RNUM, 
				A.CENTER_CD, A.FLOOR_CD, A.PART_CD, A.SEAT_CD, A.SEAT_NM, 
				A.USE_YN, A.SEAT_TOP, A.SEAT_LEFT, A.SEAT_QR_CD, A.SEAT_QR_CD_PATH, 
				A.SEAT_QR_CD_FULL_PATH, A.SEAT_REQ_DAY, FN_DETAILCODENM(F.PART_CLASS) AS SEAT_CLASS_TXT, A.SEAT_CLASS_INFO, FN_DETAILCODENM(A.SEAT_DVSN) AS SEAT_DVSN_TXT,
				TO_CHAR(A.LAST_UPDT_DTM, 'yyyy-mm-dd') AS LAST_UPDT_DTM, A.LAST_UPDUSR_ID, FN_SEATPAYCOST(D.CENTER_CD, D.PART_CLASS) AS PAY_COST, A.SEAT_ORDER, A.SEAT_NUMBER, B.CENTER_NM,  
				C.FLOOR_NM, C.FLOOR_INFO, DECODE(A.PART_CD,'0','구역 미사용', D.PART_NM) AS PART_NM
			FROM TSEB_SEAT_INFO_D A, TSEB_CENTER_INFO_M B, TSEB_FLOOR_INFO_M C, TSEB_PART_INFO_D D, TSEB_CENTER_PART_CLASS_D F
			WHERE A.CENTER_CD = B.CENTER_CD  
			AND A.FLOOR_CD = C.FLOOR_CD
			AND A.PART_CD = D.PART_CD
			AND D.PART_CLASS_SEQ = F.PART_CLASS_SEQ
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
				AND A.SEAT_NM LIKE '%' || #{params.searchKeyword} ||'%'
			</if>	
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchCenterCd)">
				AND A.CENTER_CD = #{params.searchCenterCd}
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchFloorCd)">
				AND A.FLOOR_CD = #{params.searchFloorCd}
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchPartCd)">
				AND TRIM(A.PART_CD) = #{params.searchPartCd}
			</if>	
			<if test="params.authorCd != 'ROLE_ADMIN' and params.authorCd != 'ROLE_SYSTEM'">
				   AND B.CENTER_CD = #{params.centerCd}
			</if>	
		) TB  
		WHERE RNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}
		ORDER BY TB.SEAT_CD ASC		 	    
    </select>
    
    <select id="selectSeatInfoDetail"  resultType="lmap">
		SELECT  
			CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, SEAT_NM, 
			USE_YN, LAST_UPDUSR_ID, LAST_UPDT_DTM 
		FROM TSEB_SEAT_INFO_D A
		WHERE SEAT_CD = #{seatCd}
    </select>
    
    <!-- 사용자 예약 화면 표출 좌석 리스트 조회 -->
	<select id="selectReservationSeatList" resultType="lmap">
		SELECT 
			A.PART_CD, A.PART_NM, B.SEAT_CD, B.SEAT_NM, C.PART_PAY_COST AS PAY_COST,
			B.SEAT_ORDER, B.SEAT_NUMBER, B.SEAT_TOP, B.SEAT_LEFT,
			CASE WHEN 
			(
				SELECT NVL(COUNT(*),0) 
         		FROM  TSER_RESV_INFO_I
         		WHERE PART_CD = A.PART_CD
         		AND SEAT_CD = B.SEAT_CD 
         		AND RESV_SEQ = #{params.resvSeq, jdbcType=VARCHAR}
				<choose>
					<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'LONG')">
						AND RESV_END_DT BETWEEN #{params.resvDateFrom} AND #{params.resvDateTo}
					</when>
					<otherwise> 
						AND RESV_END_DT = #{params.resvDate, jdbcType=VARCHAR}
					</otherwise>
				</choose>
         		AND RESV_STATE NOT IN ('RESV_STATE_4')
			) > 0  THEN '1'
			WHEN
			(
				SELECT NVL(COUNT(*),0) 
         		FROM TSER_RESV_INFO_I 
         		WHERE PART_CD = A.PART_CD
         		AND SEAT_CD = B.SEAT_CD
				<choose>
					<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'LONG')">
						AND RESV_END_DT BETWEEN #{params.resvDateFrom} AND #{params.resvDateTo}
					</when>
					<otherwise> 
						AND RESV_END_DT = #{params.resvDate, jdbcType=VARCHAR}
					</otherwise>
				</choose>
         		AND RESV_STATE NOT IN ('RESV_STATE_4')
			) > 0  THEN '2'
			ELSE '0' END AS status
		FROM TSEB_PART_INFO_D A, TSEB_SEAT_INFO_D B, TSEB_CENTER_PART_CLASS_D C
		WHERE A.PART_CD = #{params.partCd}
		AND A.PART_CD = B.PART_CD
		AND A.PART_CLASS_SEQ = C.PART_CLASS_SEQ
		AND B.USE_YN = 'Y'
    </select>
    
    <insert id="insertSeatInfo" >
	{CALL
		DECLARE
		BEGIN
		
		<selectKey resultType="String" keyProperty="seatCd" order="BEFORE">
        	<choose>
           		<when test='partCd == "0"'>
            		SELECT FN_SEATCODE(#{floorCd},'FLOOR') AS seatCd FROM DUAL
				</when>
				<otherwise>
					SELECT FN_SEATCODE(#{partCd},'PART') AS seatCd FROM DUAL				
				</otherwise>
			</choose>
		</selectKey>
		INSERT INTO TSEB_SEAT_INFO_D
		(
			CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, SEAT_NM, 
			USE_YN,	SEAT_TOP, SEAT_LEFT, FRST_REGTER_ID, FRST_REGIST_DTM, 
			LAST_UPDUSR_ID, LAST_UPDT_DTM, SEAT_ORDER, SEAT_NUMBER
		)
		VALUES
		(            
			#{centerCd}, #{floorCd}, #{partCd, jdbcType=VARCHAR}, #{seatCd}, #{seatNm}, 
			#{useYn}, 0, 0, #{frstRegterId, jdbcType=VARCHAR}, SYSDATE, 
			#{lastUpdusrId, jdbcType=VARCHAR}, SYSDATE,
			(
				SELECT MAX(SEAT_ORDER) +1 
				FROM TSEB_SEAT_INFO_D 
				WHERE PART_CD = #{partCd, jdbcType=VARCHAR}
			),
			(
				SELECT MAX(SEAT_NUMBER) +1 
				FROM TSEB_SEAT_INFO_D 
				WHERE PART_CD = #{partCd, jdbcType=VARCHAR}
			)
		);
                 
		UPDATE TSEB_FLOOR_INFO_M SET FLOOR_SEAT_CNT = FLOOR_SEAT_CNT + 1 WHERE FLOOR_CD = #{floorCd};
		
		END
	}
    </insert>
    
    <insert id="insertFloorSeatInfo">
	{CALL
		DECLARE
		BEGIN
		<selectKey resultType="String" keyProperty="floorNm" order="BEFORE">
			SELECT FLOOR_NM FROM TSEB_FLOOR_INFO_M WHERE FLOOR_CD = #{params.floorCd}
		</selectKey>
		
		<choose>
			<when test='params.partCd != "0"'>
				INSERT INTO TSEB_SEAT_INFO_D
				(
					SEAT_CD, CENTER_CD, FLOOR_CD, PART_CD, SEAT_NM, 
					USE_YN, SEAT_TOP, SEAT_LEFT, FRST_REGTER_ID, FRST_REGIST_DTM, 
					LAST_UPDUSR_ID, LAST_UPDT_DTM, SEAT_CLASS, PAY_COST, SEAT_ORDER, 
					SEAT_NUMBER
				)
				SELECT 
					FN_SEATCODEINSERT(TA.PART_CD, 'PART', RNUM), TA.CENTER_CD, TA.FLOOR_CD, TA.PART_CD, TA.RN, 
					'Y', 0, 0, #{params.frstRegterId}, SYSDATE, 
					#{params.lastUpdusrId}, SYSDATE, TA.PART_CLASS, FN_SEATPAYCOST(TA.CENTER_CD, TA.PART_CLASS), TA.RNUM, 
					TA.RNUM
				FROM 
				(
					<![CDATA[
					SELECT  
						A.CENTER_CD, A.FLOOR_CD, A.PART_CD, #{floorNm, jdbcType=VARCHAR}|| '_' || A.PART_NM || '_' || B.RN AS RN,  
						ROW_NUMBER() OVER(ORDER BY B.RN ASC) AS RNUM, A.PART_CLASS
					FROM TSEB_PART_INFO_D A
					( 
						SELECT NUM AS RN FROM TABLE(FN_ROWTABLE(${params.seatStr}, ${params.seatEnd}))
					) B 
					WHERE PART_CD = #{params.partCd}
					]]>
				) TA
				ORDER BY TA.RN ASC;
			</when>
			<otherwise>
				INSERT INTO TSEB_SEAT_INFO_D
				(
					SEAT_CD, CENTER_CD, FLOOR_CD, PART_CD, SEAT_NM, 
					USE_YN, SEAT_TOP, SEAT_LEFT, FRST_REGTER_ID, FRST_REGIST_DTM, 
					LAST_UPDUSR_ID, LAST_UPDT_DTM, SEAT_DVSN, SEAT_CLASS, PAY_DVSN, 
					PAY_COST, PAY_AM_COST, PAY_PM_COST, SEAT_ORDER
				)
				SELECT 
					FN_SEATCODEINSERT(TA.FLOOR_CD, 'FLOOR', RNUM), TA.CENTER_CD, TA.FLOOR_CD, TA.PART_CD, TA.RN, 
					'Y', 0, 0, #{params.frstRegterId}, SYSDATE, 
					#{params.lastUpdusrId}, SYSDATE, #{params.seatDvsn, jdbcType=VARCHAR}, #{params.seatClass}, #{params.payDvsn, jdbcType=VARCHAR}, 
					#{params.payCost}, #{params.payAmCost}, #{params.payPmCost}, TA.RNUM 
				FROM 
				(
					<![CDATA[
					SELECT  
						A.CENTER_CD, A.FLOOR_CD, 0 AS PART_CD, A.FLOOR_NM || '_' || B.RN AS RN,  
						ROW_NUMBER() OVER(ORDER BY B.RN ASC) AS RNUM
					FROM TSEB_FLOOR_INFO_M A, 
					(
						SELECT NUM AS RN FROM TABLE(FN_ROWTABLE(${params.seatStr}, ${params.seatEnd})) 
					) B 
					WHERE FLOOR_CD = #{params.floorCd};
					]]>
				) TA
				ORDER BY TA.RN DESC
			</otherwise>
		</choose>
		
		UPDATE TSEB_FLOOR_INFO_M SET 
			FLOOR_SEAT_CNT = 
			(
				SELECT NVL(COUNT(*),0) 
				FROM TSEB_SEAT_INFO_D 
				WHERE FLOOR_CD = #{params.floorCd} 
			)
		WHERE FLOOR_CD = #{params.floorCd};
		
		END
	}
    </insert>
    
    <update id="updateSeatInfo" >
		UPDATE TSEB_SEAT_INFO_D SET 
			CENTER_CD = #{centerCd}, 
			FLOOR_CD = #{floorCd, jdbcType=VARCHAR}, 
			PART_CD = #{partCd, jdbcType=VARCHAR}, 
			SEAT_NM = #{seatNm}, 
			USE_YN = #{useYn, jdbcType=VARCHAR},
			LAST_UPDUSR_ID = #{lastUpdusrId, jdbcType=VARCHAR},   
			LAST_UPDT_DTM = SYSDATE
	    WHERE SEAT_CD = #{seatCd}           
    </update>
    
    <update id="updateSeatPositionInfo" parameterType="java.util.List">
		<foreach collection="seatInfoList" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE TSEB_SEAT_INFO_D SET 
				SEAT_TOP = #{item.seatTop, jdbcType=VARCHAR}, 
				SEAT_LEFT = #{item.seatLeft, jdbcType=VARCHAR}, 
				LAST_UPDT_DTM = SYSDATE, 
				LAST_UPDUSR_ID = #{item.userId, jdbcType=VARCHAR}
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(item.seatOrder)">
					, SEAT_ORDER = #{item.seatOrder}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(item.seatNm)">
					, SEAT_NM = #{item.seatNm}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(item.seatNumber)">
					, SEAT_NUMBER = #{item.seatNumber}
				</if>
			WHERE SEAT_CD = #{item.seatCd}
		</foreach> 
    </update> 
    
    <delete id="deleteSeatInfo">
	{CALL
		DECLARE
		BEGIN
		
		UPDATE 
			TSEB_FLOOR_INFO_M A SET A.FLOOR_SEAT_CNT = 
				A.FLOOR_SEAT_CNT - 
				(
					SELECT NVL(COUNT(*),0) 
					FROM TSEB_SEAT_INFO_D
					WHERE FLOOR_CD = A.FLOOR_CD
					AND SEAT_CD IN
					<foreach collection="seatInfoList" item="item"  open="(" separator="," close=")">
            			#{item}
        			</foreach>
				);
        
        DELETE FROM TSEB_SEAT_INFO_D WHERE SEAT_CD IN
        <foreach collection="seatInfoList" item="item"  open="(" separator="," close=")">
            #{item}
        </foreach>
        ;
        
		END
	}
    </delete>
</mapper>
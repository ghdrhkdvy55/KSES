<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.rsv.reservation.mapper.ResvInfoManageMapper">
	<!-- 예약정보 목록 조회 -->
	<select id="selectResvInfoManageListByPagination" resultType="lmap">
		SELECT * FROM 
		( 
			SELECT 	
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT, 
				ROW_NUMBER() OVER (ORDER BY TB.RESV_SEQ DESC) AS RNUM,
				TB.* 
			FROM 	
			(	
				SELECT  
					A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
					A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.USER_ID, A.RESV_USER_DVSN,
					A.RESV_USER_ASK_YN, A.RESV_RCPT_YN, A.RESV_RCPT_NUMBER, A.RESV_RCPT_STATE, A.RESV_PAY_COST, 
					A.RESV_PAY_DVSN, A.RESV_TICKET_DVSN, A.RESV_STATE,
					FN_DETAILCODENM(A.RESV_TICKET_DVSN) AS RESV_TICKET_DVSN_TEXT,
					FN_DETAILCODENM(A.RESV_PAY_DVSN) AS RESV_PAY_DVSN_TEXT,
					FN_DETAILCODENM(A.RESV_STATE) AS RESV_STATE_TEXT,
					FN_DETAILCODENM(E.PART_CLASS) AS PART_CLASS,
					CASE  
    					WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '자유석' 
    					ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    				END AS SEAT_NM, 
					C.CENTER_NM, C.CENTER_PILOT_YN, D.USER_NM, REGEXP_REPLACE(D.USER_PHONE, '(02|.{3})(.+)(.{4})', '\1-\2-\3') AS USER_PHONE
				FROM TSER_RESV_INFO_I A, TSEB_SEAT_INFO_D B, TSEB_CENTER_INFO_M C, TSER_USER_INFO_I D, TSEB_PART_INFO_D E
				WHERE A.SEAT_CD = B.SEAT_CD(+)
				AND A.PART_CD = E.PART_CD(+)
				AND A.CENTER_CD = C.CENTER_CD
				AND A.USER_ID = D.USER_ID
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchResvUserDvsn)">
					AND A.RESV_USER_DVSN = #{params.searchResvUserDvsn}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchResvPayDvsn)">
					AND A.RESV_PAY_DVSN = #{params.searchResvPayDvsn}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchResvTicketDvsn)">
					AND A.RESV_TICKET_DVSN = #{params.searchResvTicketDvsn}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchCenterCd)">
					AND A.CENTER_CD = #{params.searchCenterCd}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchResvRcptYn)">
					AND A.RESV_RCPT_YN = #{params.searchResvRcptYn}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchCenterPilotYn)">
					AND C.CENTER_PILOT_YN = #{params.searchCenterPilotYn}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.authorCd)">
					<if test="params.authorCd != 'ROLE_ADMIN' and params.authorCd != 'ROLE_SYSTEM'">
					   AND A.CENTER_CD = #{params.centerCd}
					</if>
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchResvState)">
					<choose>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchStateCondition,'cancel')">
							AND A.RESV_STATE != #{params.searchResvState}
						</when>
						<otherwise>
							AND A.RESV_STATE = #{params.searchResvState}
						</otherwise>
					</choose>	
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchFrom) and !@org.apache.commons.lang3.StringUtils@isEmpty(params.searchTo)">
					<choose>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchDayCondition,'resvDate')">
							AND A.RESV_END_DT BETWEEN #{params.searchFrom} AND #{params.searchTo}
						</when>
						<otherwise>
							AND TO_CHAR(TO_DATE(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI'),'YYYY-MM-DD HH24:MI') BETWEEN #{params.searchFrom} AND #{params.searchTo}
						</otherwise>
					</choose>
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
					<choose>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'resvSeq')">
							AND A.RESV_SEQ LIKE '%' || #{params.searchKeyword} || '%'
						</when>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'resvName')">
							AND A.RESV_USER_NM LIKE '%' || #{params.searchKeyword} || '%'
						</when>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'resvId')">
							AND A.USER_ID LIKE '%' || #{params.searchKeyword} || '%'
						</when>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'resvPhone')">
							AND A.RESV_USER_CLPHN LIKE '%' || #{params.searchKeyword} || '%'
						</when>						
						<otherwise> 
							AND 
							(
								A.RESV_SEQ LIKE '%' || #{params.searchKeyword} || '%' 
								OR A.RESV_USER_NM LIKE '%' || #{params.searchKeyword} || '%'
								OR A.USER_ID LIKE '%' || #{params.searchKeyword} || '%'
								OR A.RESV_USER_CLPHN LIKE '%' || #{params.searchKeyword} || '%' 
							)
						</otherwise>
					</choose>
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchLongResvSeq)">
					AND A.LONG_RESV_SEQ = #{params.searchLongResvSeq}
					AND A.RESV_END_DT > TO_CHAR(SYSDATE,'YYYYMMDD')
				</if>
			) TB
			ORDER BY TB.RESV_SEQ DESC	
		) TA
		WHERE RNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}  
		ORDER BY TA.RESV_SEQ DESC
    </select>
    
    <!-- 예약상세정보 조회 -->
	<select id="selectResvInfoDetail" resultType="lmap">
		SELECT
			A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
			A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.USER_ID,
			A.RESV_STATE, A.RESV_USER_ASK_YN, A.RESV_RCPT_YN, A.RESV_RCPT_NUMBER, A.RESV_PAY_COST, A.RESV_ENTRY_DVSN,
			A.RESV_RCPT_DVSN, A.RESV_RCPT_TEL, A.RESV_RCPT_STATE, A.RESV_PAY_DVSN, A.RESV_USER_DVSN, A.RESV_USER_NM, 
			REGEXP_REPLACE(A.RESV_USER_CLPHN, '(02|.{3})(.+)(.{4})', '\1-\2-\3') AS RESV_USER_CLPHN, 
			A.RESV_ENTRY_PAY_COST, A.RESV_SEAT_PAY_COST, A.RESV_TICKET_DVSN,
			FN_DETAILCODENM(A.RESV_USER_DVSN) AS RESV_USER_DVSN_TEXT,
			FN_DETAILCODENM(A.RESV_TICKET_DVSN) AS RESV_TICKET_DVSN_TEXT,
			FN_DETAILCODENM(A.RESV_PAY_DVSN) AS RESV_PAY_DVSN_TEXT,
			FN_DETAILCODENM(A.RESV_STATE) AS RESV_STATE_TEXT,
			FN_DETAILCODENM(A.RESV_RCPT_DVSN) AS RESV_RCPT_DVSN_TEXT,
			CASE  
				WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '자유석' 
				ELSE D.FLOOR_NM || ' ' || E.PART_NM || '구역 ' || F.SEAT_NM
			END AS SEAT_NM,
			C.CENTER_CD, C.CENTER_NM, C.CENTER_PILOT_YN, B.USER_NM, REGEXP_REPLACE(B.USER_PHONE, '(02|.{3})(.+)(.{4})', '\1-\2-\3') AS USER_PHONE, B.USER_EMAIL,
			D.FLOOR_CD, E.PART_CD
		FROM TSER_RESV_INFO_I A, TSER_USER_INFO_I B, TSEB_CENTER_INFO_M C, TSEB_FLOOR_INFO_M D, TSEB_PART_INFO_D E, TSEB_SEAT_INFO_D F
		WHERE A.RESV_SEQ = #{resvSeq}
		AND A.USER_ID = B.USER_ID
		AND A.CENTER_CD = C.CENTER_CD
		AND A.FLOOR_CD = D.FLOOR_CD(+)
		AND A.PART_CD = E.PART_CD(+)
		AND A.SEAT_CD = F.SEAT_CD(+)
	</select>
	
	<!-- 회원 마지막 에약정보 조회 -->
	<select id="selectUserLastResvInfo" resultType="lmap">
		SELECT TA.* FROM 
		(
			SELECT TB.* FROM 
			(
				SELECT  
					A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
					A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.USER_ID, A.RESV_USER_DVSN,
					A.RESV_USER_ASK_YN, A.RESV_STATE, A.RESV_RCPT_YN, A.RESV_RCPT_NUMBER, FN_DETAILCODENM(A.RESV_SEAT_CLASS) AS RESV_SEAT_CLASS, 
					A.RESV_ENTRY_DVSN, C.CENTER_NM,
					CASE  
		    			WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1' THEN '자유석' 
		    			ELSE B.SEAT_NM
		    		END AS SEAT_NM, 
					<![CDATA[
					CASE 
						WHEN A.RESV_END_DT BETWEEN TO_CHAR(SYSDATE,'YYYYMMDD') AND TO_CHAR(SYSDATE + INTERVAL '1' DAY, 'YYYYMMDD') THEN 'NOW'
					 	WHEN A.RESV_END_DT < TO_CHAR(SYSDATE,'YYYYMMDD') THEN 'PRE'
					END AS RESV_INFO_TYPE
					]]>	   
				FROM TSER_RESV_INFO_I A, TSEB_SEAT_INFO_D B, TSEB_CENTER_INFO_M C 
				WHERE A.USER_ID = #{userId}
				AND A.SEAT_CD = B.SEAT_CD(+)
				AND A.CENTER_CD = C.CENTER_CD
				AND A.RESV_STATE NOT IN ('RESV_STATE_4')
				ORDER BY A.RESV_SEQ DESC
			) TB
			ORDER BY TB.RESV_INFO_TYPE ASC, TB.RESV_END_DT ASC 
		) TA 
		WHERE ROWNUM = 1 
    </select>
    
	<!-- 회원 예약정보 조회 -->
	<select id="selectUserResvInfo" resultType="lmap">
		SELECT  
			A.RESV_SEQ, A.RESV_USER_DVSN, A.SEASON_CD, A.CENTER_CD, A.PART_CD,
			A.FLOOR_CD, A.SEAT_CD, B.CENTER_NM, C.FLOOR_NM, D.PART_NM,
			CASE  
    			WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1' THEN '자유석' 
    			ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    		END AS SEAT_NM,
    		A.RESV_START_DT, A.RESV_END_DT, A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE,
    		F.USER_NM, F.USER_ID, F.USER_PHONE, F.USER_CARD_ID, F.USER_CARD_SEQ,   
    		A.RESV_ENTRY_DVSN, A.RESV_STATE, A.RESV_PAY_DVSN, A.RESV_TICKET_DVSN, A.RESV_PAY_COST,
    		A.RESV_QR_COUNT,
    		CASE
    			WHEN PART_CLASS = 'SEAT_CLASS_1' THEN 'G'
    			WHEN PART_CLASS = 'SEAT_CLASS_2' THEN 'S'
    			WHEN PART_CLASS = 'SEAT_CLASS_3' THEN 'P'
				ELSE 'N'
			END AS PART_INITIAL,
			B.CENTER_PILOT_YN, A.TRAD_NO, A.TRAD_DATE, B.CENTER_SPEED_CD, B.CENTER_RBM_CD,
			A.RESV_USER_NM, A.RESV_USER_CLPHN, FN_DETAILCODENM(D.PART_CLASS) AS SEAT_CLASS,
			B.CENTER_SPEED_ENTRY_PAY_COST,
			FN_PARTPAYCOST(D.PART_CD,'SPEED') AS PART_SPEED_PAY_COST 
		FROM 
			TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B, TSEB_FLOOR_INFO_M C, TSEB_PART_INFO_D D, 
			TSEB_SEAT_INFO_D E, TSER_USER_INFO_I F
		WHERE A.RESV_SEQ = #{params.resvSeq}
		AND A.CENTER_CD = B.CENTER_CD
		AND A.FLOOR_CD = C.FLOOR_CD(+)
		AND A.PART_CD = D.PART_CD(+)
		AND A.SEAT_CD = E.SEAT_CD(+)
		AND A.USER_ID = F.USER_ID
		FOR UPDATE OF A.RESV_SEQ WAIT 5
    </select>
    
	<!-- 사용자페이지 회원 예약정보 조회 -->
	<select id="selectUserResvInfoFront" resultType="lmap">
		SELECT  
			A.RESV_SEQ, A.RESV_USER_DVSN, A.CENTER_CD, A.PART_CD, A.FLOOR_CD, 
			A.SEAT_CD, A.RESV_START_DT, A.RESV_END_DT, TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, 
			A.RESV_ENTRY_DVSN, A.RESV_PAY_COST, F.USER_NM,  A.RESV_TICKET_DVSN,
			A.USER_ID, A.RESV_USER_NM,
			CASE  
    			WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1' THEN '자유석' 
    			ELSE E.SEAT_NM
    		END AS SEAT_NM,
			<![CDATA[   			
			CASE WHEN 
			(	
				SELECT 
					NVL(COUNT(*),0) FROM TSER_RESV_INFO_I
				WHERE SEAT_CD = A.SEAT_CD
				AND RESV_STATE NOT IN ('RESV_STATE_4') 
				AND FN_RESVDATE(A.CENTER_CD) = RESV_END_DT
			) <= 0 THEN 'Y'
			]]>	   
			ELSE 'N'
			END AS RE_RESV_YN, 
			A.RESV_PAY_DVSN, A.RESV_STATE, B.CENTER_NM, B.CENTER_PILOT_YN, 
			C.FLOOR_NM, D.PART_NM, FN_DETAILCODENM(D.PART_CLASS) AS SEAT_CLASS
		FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B, TSEB_FLOOR_INFO_M C, TSEB_PART_INFO_D D, TSEB_SEAT_INFO_D E, TSER_USER_INFO_I F
		WHERE A.RESV_SEQ = #{params.resvSeq}
		AND A.CENTER_CD = B.CENTER_CD
		AND A.FLOOR_CD = C.FLOOR_CD(+)
		AND A.PART_CD = D.PART_CD(+)
		AND A.SEAT_CD = E.SEAT_CD(+)
		AND A.USER_ID = F.USER_ID
    </select>
    
    <!-- 회원 마이페이지 예약정보 조회 -->
	<select id="selectUserMyResvInfo" resultType="lmap">
    	SELECT
    		A.RESV_SEQ, A.RESV_USER_NM, B.CENTER_NM, A.RESV_TICKET_DVSN,
    		CASE  
    			WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '자유석' 
    			ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    		END AS SEAT_NM, 
    		A.RESV_STATE, A.RESV_START_DT, A.RESV_END_DT,
    		FN_DETAILCODENM(A.RESV_STATE) AS RESV_STATE_TEXT,
    		TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE,
    		A.RESV_PAY_DVSN, A.RESV_RCPT_YN
		FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B 
		WHERE A.CENTER_CD = B.CENTER_CD
		AND A.USER_ID = #{params.userId}
		<choose>
			<when test='params.searchStateCondition == "RESV"'>
				AND A.RESV_STATE != 'RESV_STATE_4'
			</when>
			<when test='params.searchStateCondition == "CANCEL"'>
				AND A.RESV_STATE = 'RESV_STATE_4'
			</when>
		</choose>		
		<choose>
			<when test='params.searchDayCondition == "RESV_REQ_DATE"'>
				AND TO_CHAR(A.RESV_REQ_DATE,'YYYYMMDD') BETWEEN #{params.searchDayFrom} AND #{params.searchDayTo}
			</when>
			<otherwise>
				AND A.RESV_END_DT BETWEEN #{params.searchDayFrom} AND #{params.searchDayTo}
			</otherwise>
		</choose>
		ORDER BY A.RESV_REQ_DATE DESC
    </select>
    
	<!-- 비회원 예약정보 조회 -->    
    <select id="selectGuestMyResvInfo" resultType="lmap">
    <![CDATA[
		SELECT TB.* FROM (
	    	SELECT
	    		A.RESV_SEQ, A.RESV_USER_NM, A.USER_ID, A.RESV_STATE, B.CENTER_NM, 
	    		B.CENTER_PILOT_YN, A.RESV_START_DT, A.RESV_END_DT, A.RESV_PAY_COST, A.RESV_ENTRY_DVSN, 
	    		A.RESV_TICKET_DVSN, A.RESV_RCPT_YN,
	    		CASE
	    			WHEN A.SEAT_CD IS NULL THEN '자유석'
	    			ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
	    		END AS SEAT_NM,
	    		TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE,
	    		C.FLOOR_NM, D.PART_NM
			FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B, TSEB_FLOOR_INFO_M C, TSEB_PART_INFO_D D, TSEB_SEAT_INFO_D E, TSER_USER_INFO_I F 
			WHERE A.CENTER_CD = B.CENTER_CD
			AND A.FLOOR_CD = C.FLOOR_CD(+)
			AND A.PART_CD = D.PART_CD(+)
			AND A.SEAT_CD = E.SEAT_CD(+) 
			AND A.RESV_USER_NM = #{params.resvUserNm}
			AND A.RESV_USER_CLPHN = #{params.resvUserClphn}
			AND A.RESV_STATE NOT IN ('RESV_STATE_3','RESV_STATE_4')
			AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.RESV_START_DT AND A.RESV_END_DT
			AND A.RESV_USER_DVSN = 'USER_DVSN_2'
			ORDER BY A.RESV_END_DT ASC
		) TB
		WHERE ROWNUM = 1
	]]>
    </select>
    
    <!-- 현재 예약 완료한 정보 조회 -->
	<select id="selectInUserResvInfo" resultType="lmap">
		SELECT 
			A.RESV_SEQ, TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.RESV_END_DT, A.RESV_ENTRY_DVSN, A.USER_ID,  
			A.RESV_USER_NM, A.RESV_USER_CLPHN, A.RESV_USER_DVSN, A.RESV_END_DT, 
			B.CENTER_NM, B.CENTER_PILOT_YN, C.FLOOR_NM, D.PART_NM
			, A.RESV_USER_NM, 
			CASE  
    			WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1' THEN '자유석' 
    			ELSE E.SEAT_NM
    		END AS SEAT_NM
		FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B, TSEB_FLOOR_INFO_M C, TSEB_PART_INFO_D D, TSEB_SEAT_INFO_D E
		WHERE A.RESV_SEQ = #{resvSeq}
		AND A.CENTER_CD = B.CENTER_CD
		AND A.FLOOR_CD = C.FLOOR_CD(+)
		AND A.PART_CD = D.PART_CD(+)
		AND A.SEAT_CD = E.SEAT_CD(+)  	
    </select>
    
    <!-- 회원 자동결제 예약정보 조회 -->
    <select id="selectAutoPaymentResvInfo" resultType="String">
		SELECT RESV_SEQ FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B, TSEC_AUTO_PAYMENT_INFO_I C 
		WHERE A.USER_ID =  #{userId}
		AND A.RESV_END_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
		AND A.RESV_STATE = 'RESV_STATE_1'
		AND A.RESV_PAY_DVSN = 'RESV_PAY_DVSN_1'
		AND A.CENTER_CD = B.CENTER_CD
		AND B.CENTER_PILOT_YN = 'Y'
		AND C.AUTO_PAYMENT_DAY = TO_CHAR(TO_DATE(A.RESV_END_DT),'d')
		AND TO_CHAR(SYSDATE,'HH24MI') BETWEEN C.AUTO_PAYMENT_OPEN_TM AND C.AUTO_PAYMENT_CLOSE_TM
    </select>
    
    <!-- 예약정보에 대한 현금영수증 발급정보 조회 -->
    <select id="selectResvBillInfo" resultType="lmap">
		SELECT 			
    		C.BILL_DVSN, C.BILL_NUM, C.BILL_CORP_NAME, C.BILL_CEO_NAME, C.BILL_ADDR, 
    		C.BILL_TEL, C.BILL_EMAIL, C.BILL_USER_ID
    	FROM TSER_RESV_INFO_I A, TESR_BILLDAY_INFO_I B, TSER_BILL_INFO_I C
    	WHERE A.RESV_SEQ = #{resvSeq}
    	AND A.CENTER_CD = B.CENTER_CD
    	AND B.BILL_DAY = TO_CHAR(TO_DATE(A.RESV_END_DT),'d')
    	AND B.BILL_SEQ = C.BILL_SEQ(+)
    </select>
    
	<!-- 회원 현재 예약일자에 대한 예약 유무 조회 -->
	<select id="selectResvDuplicate" resultType="int">
		SELECT NVL(COUNT(*),0) AS CNT
		FROM TSER_RESV_INFO_I A
		<choose>
			<when test="@org.apache.commons.lang3.StringUtils@equals(params.userDvsn,'USER_DVSN_1')">
				WHERE (A.USER_ID = #{params.userId} OR A.RESV_USER_CLPHN = #{params.userPhone}) 
			</when>
			<otherwise>
				WHERE A.RESV_USER_CLPHN = #{params.userPhone}
			</otherwise>
		</choose>
		AND A.RESV_END_DT = #{params.resvDate}
		AND A.RESV_STATE NOT IN ('RESV_STATE_4')
    </select>  
    
	<!-- 예약지점 휴일을 제외한 예약일자 조회 -->
	<select id="selectResvDateList" resultType="String">
	<![CDATA[
		SELECT A.RESV_DATE FROM 
		(
			SELECT TO_CHAR(TO_DATE(#{resvDateFrom},'YYYYMMDD') + (LEVEL-1), 'YYYYMMDD') AS RESV_DATE 
			FROM DUAL
			CONNECT BY TO_CHAR(TO_DATE(#{resvDateFrom},'YYYYMMDD') + (LEVEL-1), 'YYYYMMDD') <= #{resvDateTo}
		) A
		WHERE A.RESV_DATE NOT IN (
			SELECT HOLY_DT FROM TSEB_CENTERHOLY_INFO_I 
			WHERE CENTER_CD = #{centerCd}
		)
		ORDER BY A.RESV_DATE ASC
	]]>
	</select>
	
	<!-- 다음 예약시퀀스 조회 -->
	<select id="selectResvSeqNext" resultType="String">
		SELECT FN_RESV_CD(#{resvDate}) FROM DUAL
	</select>
	
	<!-- 지점 예약일자 조회 -->
	<select id="selectCenterResvDate" resultType="String">
    	SELECT FN_RESVDATE(#{centerCd}) FROM DUAL
    </select>
    
    <!-- 지점 사전예약일 목록 조회 -->
    <select id="selectCenterResvDateList" resultType="lmap">
    <![CDATA[
	    SELECT RESV_DATE FROM (
			SELECT ROWNUM AS RNUM, TO_CHAR(TO_DATE(RESV_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS RESV_DATE FROM (
				SELECT TO_CHAR(TO_DATE(FN_RESVDATE(#{centerCd}),'YYYY-MM-DD') + LEVEL -1, 'YYYYMMDD') AS RESV_DATE FROM DUAL 
				CONNECT BY LEVEL <= 30
				MINUS 
				SELECT TO_CHAR(TO_DATE(HOLY_DT,'YYYY-MM-DD'), 'YYYY-MM-DD') FROM TSEB_CENTERHOLY_INFO_I WHERE CENTER_CD = #{centerCd} AND HOLY_DT >= FN_RESVDATE(#{centerCd})
			) A
			ORDER BY RESV_DATE ASC
		)
		WHERE RNUM <= (SELECT CENTER_RESV_ABLE_DAY FROM TSEB_CENTER_INFO_M WHERE CENTER_CD = #{centerCd})
	]]>
    </select>
    
	<select id="selectQrDuplicate" resultType="lmap">
    	SELECT NVL(COUNT(*),0) AS CNT
		FROM TSER_QR_CHECK_H  
		WHERE RESV_SEQ = #{params.resvSeq}
		AND QR_CODE = #{params.qrCode}
    </select>
	
	<!-- 회원 예약정보 등록 -->
    <insert id="insertUserResvInfo">
		<selectKey resultType="String" keyProperty="resvSeq" order="BEFORE">
			SELECT FN_RESV_CD(#{resvDate}) FROM DUAL
		</selectKey>
    
    	INSERT INTO TSER_RESV_INFO_I 
    	(
			RESV_SEQ, SEASON_CD, CENTER_CD, FLOOR_CD, PART_CD, 
			SEAT_CD, RESV_START_DT, RESV_END_DT, RESV_START_TM, 
			RESV_END_TM, RESV_REQ_DATE, RESV_USER_DVSN, USER_ID, RESV_USER_NM, 
			RESV_USER_CLPHN, RESV_USER_ASK_YN, RESV_TICKET_DVSN, RESV_STATE, RESV_RCPT_YN, RESV_RCPT_DVSN,
			RESV_RCPT_TEL, RESV_INDVDLINFO_AGRE_YN, RESV_SEAT_CLASS, RESV_ENTRY_DVSN, RESV_PAY_DVSN, 
			RESV_ENTRY_PAY_COST, RESV_SEAT_PAY_COST, RESV_PAY_COST, FRST_REGIST_DTM, FRST_REGTER_ID, 
			LAST_UPDT_DTM, LAST_UPDUSR_ID  
		)
		VALUES 
		(
			#{resvSeq}, #{seasonCd, jdbcType=VARCHAR}, #{centerCd, jdbcType=VARCHAR}, #{floorCd, jdbcType=VARCHAR}, #{partCd, jdbcType=VARCHAR}, 
			#{seatCd, jdbcType=VARCHAR}, TO_CHAR(TO_DATE(#{resvDate},'YYYYMMDD') - (INTERVAL '1' DAY),'YYYYMMDD'), #{resvDate}, '0000', 
			'2359', SYSDATE, #{resvUserDvsn, jdbcType=VARCHAR}, 
			<choose>
           		<when test='resvUserDvsn == "USER_DVSN_1"'>
           			#{userId, jdbcType=VARCHAR}, 
				</when>
				<otherwise>
					CONCAT('NOC',#{resvSeq}),
				</otherwise>
			</choose>
			#{resvUserNm}, 
			#{resvUserClphn}, #{resvUserAskYn, jdbcType=VARCHAR}, '', 'RESV_STATE_1', #{resvRcptYn, jdbcType=VARCHAR}, #{resvRcptDvsn, jdbcType=VARCHAR}, 
			#{resvRcptTel, jdbcType=VARCHAR}, #{resvIndvdlinfoAgreYn, jdbcType=VARCHAR}, FN_PARTCLASS(#{partCd, jdbcType=VARCHAR}), #{resvEntryDvsn, jdbcType=VARCHAR}, 'RESV_PAY_DVSN_1', 
			FN_ENTRYPAYCOST(#{centerCd, jdbcType=VARCHAR}), #{resvSeatPayCost, jdbcType=VARCHAR}, FN_ENTRYPAYCOST(#{centerCd, jdbcType=VARCHAR}) + #{resvSeatPayCost, jdbcType=VARCHAR}, SYSDATE, 'SYSTEM', 
			SYSDATE, 'SYSTEM'  	
		)
    </insert>
    
	<!-- 회원 장기 예약정보 등록 -->
    <insert id="insertUserLongResvInfo">
    	<selectKey keyProperty="longResvSeq" order="BEFORE" resultType="ResvInfo">
    		SELECT SEQ_SER_LONGRESV_INFO.NEXTVAL AS longResvSeq FROM DUAL
    	</selectKey>
    
    	<foreach collection="resvDateList" item="resvDate" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
	    	INSERT INTO TSER_RESV_INFO_I 
	    	(
				RESV_SEQ, LONG_RESV_SEQ, SEASON_CD, CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, 
				RESV_START_DT, RESV_END_DT, RESV_START_TM, RESV_END_TM,
				RESV_REQ_DATE, RESV_USER_DVSN, USER_ID, RESV_USER_NM, RESV_USER_CLPHN, RESV_USER_ASK_YN, RESV_TICKET_DVSN, 
				RESV_STATE, RESV_RCPT_YN, RESV_INDVDLINFO_AGRE_YN, RESV_SEAT_CLASS,
				RESV_ENTRY_DVSN, RESV_PAY_DVSN, RESV_ENTRY_PAY_COST, RESV_SEAT_PAY_COST, RESV_PAY_COST,  
				FRST_REGIST_DTM, FRST_REGTER_ID, LAST_UPDT_DTM, LAST_UPDUSR_ID
			)
			VALUES 
			(
				FN_RESV_CD(#{resvDate}), #{longResvSeq}, #{seasonCd, jdbcType=VARCHAR}, #{centerCd, jdbcType=VARCHAR}, #{floorCd, jdbcType=VARCHAR}, #{partCd, jdbcType=VARCHAR}, #{seatCd, jdbcType=VARCHAR},
				TO_CHAR(TO_DATE(#{resvDate, jdbcType=VARCHAR},'YYYYMMDD') - (INTERVAL '1' DAY),'YYYYMMDD'), #{resvDate, jdbcType=VARCHAR}, '0000', '2359',
				SYSDATE, 'USER_DVSN_1', #{userId, jdbcType=VARCHAR}, #{resvUserNm}, #{resvUserClphn}, 'Y', '',
				'RESV_STATE_1', 'N', 'Y', FN_PARTCLASS(#{partCd, jdbcType=VARCHAR}),
				'ENTRY_DVSN_2', 'RESV_PAY_DVSN_1', FN_ENTRYPAYCOST(#{centerCd, jdbcType=VARCHAR}), #{resvSeatPayCost, jdbcType=VARCHAR}, 
				FN_ENTRYPAYCOST(#{centerCd, jdbcType=VARCHAR}) + #{resvSeatPayCost, jdbcType=VARCHAR}, 
				SYSDATE, #{adminId, jdbcType=VARCHAR}, SYSDATE, #{adminId, jdbcType=VARCHAR}  	
			)
		</foreach>
    </insert>
    
	<!-- 회원 장기 예약정보 등록 -->
    <insert id="insertLongResvInfo">
		INSERT INTO TSER_LONG_RESV_INFO_I 
		(
			LONG_RESV_SEQ, SEASON_CD, CENTER_CD, FLOOR_CD, PART_CD, 
			SEAT_CD, LONG_RESV_START_DT, LONG_RESV_END_DT, USER_ID, 
			EMP_NO, FRST_REGIST_DTM, FRST_REGTER_ID, LAST_UPDT_DTM, LAST_UPDUSR_ID  
		)
		VALUES 
		(
			#{longResvSeq}, #{seasonCd, jdbcType=VARCHAR}, #{centerCd, jdbcType=VARCHAR}, #{floorCd, jdbcType=VARCHAR}, #{partCd, jdbcType=VARCHAR}, 
			#{seatCd, jdbcType=VARCHAR}, #{resvDateFrom, jdbcType=VARCHAR}, #{resvDateTo, jdbcType=VARCHAR}, #{userId, jdbcType=VARCHAR},  
			#{longResvEmpNo, jdbcType=VARCHAR}, SYSDATE, #{adminId, jdbcType=VARCHAR}, SYSDATE, #{adminId, jdbcType=VARCHAR}
		)
    </insert>
    
    <!-- 좌석 정보 변경 -->
	<update id="updateResvSeatInfo">
    	UPDATE TSER_RESV_INFO_I SET
    		SEASON_CD = #{params.seasonCd, jdbcType=VARCHAR},
    		CENTER_CD = #{params.centerCd},
    		FLOOR_CD = #{params.floorCd},
    		PART_CD = #{params.partCd},
    		SEAT_CD = #{params.seatCd},
    		RESV_ENTRY_PAY_COST = FN_ENTRYPAYCOST(#{params.centerCd}),
    		RESV_PAY_COST = FN_ENTRYPAYCOST(#{params.centerCd}) + #{params.resvSeatPayCost},
    		RESV_SEAT_PAY_COST = #{params.resvSeatPayCost},
    		LAST_UPDUSR_ID = #{params.adminId},
    		LAST_UPDT_DTM = SYSDATE
    	WHERE RESV_SEQ = #{params.resvSeq}
    </update>
    
	<!-- 예약 고객 아이디 조회 -->
    <update id="updateResvInfoCopy" parameterType="java.util.Map">
    	INSERT INTO TSER_RESV_INFO_I 
    	(
			RESV_SEQ, SEASON_CD, CENTER_CD, FLOOR_CD, PART_CD, 
			SEAT_CD, RESV_START_DT, RESV_END_DT, RESV_START_TM, 
			RESV_END_TM, RESV_REQ_DATE, RESV_USER_DVSN, USER_ID, RESV_USER_NM, 
			RESV_USER_CLPHN, RESV_USER_ASK_YN, RESV_STATE, RESV_RCPT_YN, RESV_RCPT_DVSN,
			RESV_RCPT_TEL, RESV_INDVDLINFO_AGRE_YN, RESV_SEAT_CLASS, RESV_ENTRY_DVSN, RESV_PAY_DVSN, 
			RESV_ENTRY_PAY_COST, RESV_SEAT_PAY_COST, RESV_PAY_COST, FRST_REGIST_DTM, FRST_REGTER_ID, 
			LAST_UPDT_DTM, LAST_UPDUSR_ID
		)
		SELECT 
			#{params.copyResvSeq}, #{params.seasonCd, jdbcType=VARCHAR}, #{params.centerCd}, #{params.floorCd}, #{params.partCd},
			#{params.seatCd}, RESV_START_DT, RESV_END_DT, RESV_START_TM, RESV_END_TM, 
			SYSDATE, RESV_USER_DVSN, USER_ID, RESV_USER_NM, RESV_USER_CLPHN, 
			RESV_USER_ASK_YN, 'RESV_STATE_1', RESV_RCPT_YN, RESV_RCPT_DVSN,
			RESV_RCPT_TEL, RESV_INDVDLINFO_AGRE_YN, FN_PARTCLASS(#{params.partCd}), 'ENTRY_DVSN_2', 'RESV_PAY_DVSN_1',
			FN_ENTRYPAYCOST(#{params.centerCd}), #{params.resvSeatPayCost}, FN_ENTRYPAYCOST(#{params.centerCd}) + #{params.resvSeatPayCost},
			SYSDATE, #{params.adminId}, SYSDATE, #{params.adminId}
		FROM TSER_RESV_INFO_I
		WHERE RESV_SEQ = #{params.resvSeq}
    </update>
    
    <update id="resvInfoCancel">
    	UPDATE TSER_RESV_INFO_I SET
    		RESV_STATE = 'RESV_STATE_4',
    		RESV_CANCEL_ID = #{params.resv_cancel_id},
    		RESV_CANCEL_CD = #{params.resv_cancel_cd},
    		RESV_CANCEL_DT = SYSDATE
    	WHERE RESV_SEQ = #{params.resv_seq}
    </update>
    
	<update id="updateResvState">
		UPDATE TSER_RESV_INFO_I SET
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(resvState)"> 
				RESV_STATE = #{resvState},
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(resvPayDvsn)">
				RESV_PAY_DVSN = #{resvPayDvsn},
			</if>
			LAST_UPDUSR_ID = #{lastUpdusrId}
        WHERE RESV_SEQ = #{resvSeq}
    </update>
    
	<update id="updateResvRcptInfo">
		UPDATE TSER_RESV_INFO_I SET 
			RESV_RCPT_YN = 'Y', 
			RESV_RCPT_DVSN = #{resvRcptDvsn}, 
			RESV_RCPT_TEL = #{resvRcptTel}                    
		WHERE RESV_SEQ = #{resvSeq}
   	</update>

	<update id="updateResvUseComplete">
		UPDATE TSER_RESV_INFO_I SET 
			RESV_STATE = 'RESV_STATE_3'
        WHERE RESV_END_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
        AND RESV_STATE != 'RESV_STATE_4'
    </update>
    
	<update id="updateResvQrCount">
		UPDATE TSER_RESV_INFO_I SET 	
			RESV_QR_COUNT = RESV_QR_COUNT + 1
        WHERE RESV_SEQ = #{resvSeq}
    </update>     
    
	<update id="updateResvPriceInfo">
		UPDATE TSER_RESV_INFO_I SET 
			<choose>
				<when test="@org.apache.commons.lang3.StringUtils@equals(resvPayDvsn,'RESV_PAY_DVSN_2')">
					TRAD_NO = #{tradNo},
					TRAD_DATE = SYSDATE,
					RESV_TICKET_DVSN = #{resvTicketDvsn},
					<if test="@org.apache.commons.lang3.StringUtils@equals(resvTicketDvsn,'RESV_TICKET_DVSN_1')">
						RESV_PAY_COST = #{resvPayCost},
						RESV_ENTRY_PAY_COST = #{resvEntryPayCost},
						RESV_SEAT_PAY_COST = #{resvSeatPayCost},
					</if>
				</when>
				<otherwise>
					REFOUND_NO = #{tradNo},
					REFOUND_DATE = SYSDATE,
				</otherwise>
			</choose>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(resvState)"> 
				RESV_STATE = #{resvState},
			</if>
			RESV_PAY_DVSN = #{resvPayDvsn}
        WHERE RESV_SEQ = #{resvSeq}
    </update>
    
    <!--  현금 영수증 출력  -->
    <update id="resvBillChange">
		UPDATE TSER_RESV_INFO_I SET 
			<if test="resvRcptState == 'RESV_RCPT_STATE_1'">
				RESV_RCPT_NUMBER = #{resvRcptNumber},
			</if>
			RESV_RCPT_STATE = #{resvRcptState}
        WHERE RESV_SEQ = #{resvSeq}
    </update>
    
	<!-- 입력은 대소문자구분 (to의 필드값)-->
	<select id="resvValidCheck" resultType="string" statementType="CALLABLE">
	{CALL
		KSES_USER.SP_RESV_CENTER_VALID
		(
			#{params.checkDvsn, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.userDvsn, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.userId, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.userPhnum, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.centerCd, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.seatCd, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.inResvDate, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.resvDateFrom, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.resvDateTo, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.resultCode, mode=OUT, jdbcType=VARCHAR, javaType=string},
			#{params.resvDate, mode=OUT, jdbcType=VARCHAR, javaType=string}
		)
	}
	</select>   
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.rsv.reservation.mapper.ResvInfoManageMapper">
	<!-- backoffice -->
	<select id="selectResInfoManageListByPagination" resultType="lmap">
		SELECT * FROM 
		( 
			SELECT 	
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT, 
				ROW_NUMBER() OVER (ORDER BY ROWNUM DESC) AS RNUM, 
				TB.* 
			FROM 	
			(	
				SELECT  
					A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
					A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.USER_ID, A.RESV_USER_DVSN,
					A.RESV_USER_ASK_YN, A.RESV_RCPT_YN, A.RESV_RCPT_NUMBER, A.RESV_PAY_COST, 
					FN_DETAILCODENM(A.RESV_TICKET_DVSN) AS RESV_TICKET_DVSN,
					FN_DETAILCODENM(A.RESV_PAY_DVSN) AS RESV_PAY_DVSN,
					FN_DETAILCODENM(A.RESV_STATE) AS RESV_STATE,
					CASE  
    					WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '입석' 
    					ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    				END AS SEAT_NM, 
					C.CENTER_NM, D.USER_NM, D.USER_PHONE
				FROM TSER_RESV_INFO_I A, TSEB_SEAT_INFO_D B, TSEB_CENTER_INFO_M C, TEST_USER_INFO D
				WHERE A.SEAT_CD = B.SEAT_CD(+)
				AND A.CENTER_CD = C.CENTER_CD
				AND A.USER_ID = D.USER_ID
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchCenterCd)">
					AND A.CENTER_CD = #{params.searchCenterCd}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchFrom) and !@org.apache.commons.lang3.StringUtils@isEmpty(params.searchTo)">
					<choose>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchDayCondition,'resvDate')">
							AND A.RESV_START_DT BETWEEN #{params.searchFrom} AND #{params.searchTo}
						</when>
						<otherwise>
							 AND TO_CHAR(A.RESV_REQ_DATE,'YYYYMMDD') BETWEEN #{params.searchFrom} AND #{params.searchTo}
						</otherwise>
					</choose>
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
					<choose>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'resvSeq')">
							AND A.RESV_SEQ LIKE '%' || #{params.searchKeyword} || '%'
						</when>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'resvName')">
							AND A.RESV_USER_NM LIKE '%' || #{params.searchKeyword} || '%'
						</when>
						<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'resvId')">
							AND A.USER_ID LIKE '%' || #{params.searchKeyword} || '%'
						</when>
						<otherwise> 
							AND 
							(
								A.RESV_SEQ LIKE '%' || #{params.searchKeyword} || '%' 
								OR A.RESV_USER_NM LIKE '%' || #{params.searchKeyword} || '%'
								OR A.USER_ID LIKE '%' || #{params.searchKeyword} || '%' 
							)
						</otherwise>
					</choose>
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchResvState)">
					AND A.RESV_STATE = #{params.searchResvState}
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchResvPayDvsn)">
					AND A.RESV_PAY_DVSN = #{params.searchResvPayDvsn}
				</if>
			    ORDER BY A.RESV_SEQ DESC	
			) TB 
		) TA
		WHERE ROWNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}  
		ORDER BY TA.RNUM DESC
    </select>
    
	<select id="selectResInfoDetail" resultType="lmap">
		SELECT  
			A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
			A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.USER_ID,
			A.RESV_USER_ASK_YN, A.RESV_RCPT_YN, A.RESV_RCPT_NUMBER, A.RESV_PAY_COST,
			FN_DETAILCODENM(A.RESV_USER_DVSN) AS RESV_USER_DVSN,
			FN_DETAILCODENM(A.RESV_TICKET_DVSN) AS RESV_TICKET_DVSN,
			FN_DETAILCODENM(A.RESV_PAY_DVSN) AS RESV_PAY_DVSN,
			FN_DETAILCODENM(A.RESV_STATE) AS RESV_STATE,
			CASE  
				WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '입석' 
				ELSE D.FLOOR_NM || ' ' || E.PART_NM || '구역 ' || F.SEAT_NM
			END AS SEAT_NM, 
			C.CENTER_NM, B.USER_NM, B.USER_PHONE
		FROM TSER_RESV_INFO_I A, TEST_USER_INFO B, TSEB_CENTER_INFO_M C, TSEB_FLOOR_INFO_M D, TSEB_PART_INFO_D E, TSEB_SEAT_INFO_D F
		WHERE A.RESV_SEQ = #{resvSeq}
		AND A.USER_ID = B.USER_ID
		AND A.CENTER_CD = C.CENTER_CD
		AND A.FLOOR_CD = D.FLOOR_CD(+)
		AND A.PART_CD = E.PART_CD(+)
		AND A.SEAT_CD = F.SEAT_CD(+)  	
	</select>
	
	<!-- Front -->
	<!-- QR 예약정보 조회 -->
	<select id="selectResvQrInfo" resultType="lmap">
		SELECT 
			RESV_SEQ, SEAT_CD, SEASON_CD, RESV_START_DT, RESV_END_DT, RESV_DVSN, 
			RESV_START_TM, RESV_END_TM, RESV_REQ_DATE, USER_ID, RESV_USER_DVSN, 
			RESV_USER_ASK_YN, RESV_TICKET_DVSN, RESV_STATE, RESV_CANCEL_ID, RESV_CANCEL_DC, 
			RESV_CANCEL_DT, RESV_CANCEL_CD, RESV_CANCEL_COST, RESV_RCPT_YN, RESV_RCPT_NUMBER, 
			FRST_REGIST_DTM, FRST_REGTER_ID, LAST_UPDT_DTM, LAST_UPDUSR_ID, RESV_ENTRY_DVSN, 
			CENTER_CD, FLOOR_CD, PART_CD, CERT_NO
		FROM TSER_RESV_INFO_I
		WHERE RESV_SEQ = #{resvSeq}
	</select>
	
	<!-- 회원 마지막 에약정보 조회 -->
	<select id="selectUserLastResvInfo" resultType="lmap">
	<![CDATA[
		SELECT  
			A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
			A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.USER_ID, A.RESV_USER_DVSN,
			A.RESV_USER_ASK_YN, A.RESV_STATE, A.RESV_RCPT_YN, A.RESV_RCPT_NUMBER, B.SEAT_NM, C.CENTER_NM,
			CASE WHEN TO_NUMBER(CONCAT(A.RESV_END_DT,A.RESV_END_TM)) >= TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MI')) THEN 'NOW' 
				ELSE 'PRE'
			END AS RESV_INFO_TYPE
		FROM TSER_RESV_INFO_I A, TSEB_SEAT_INFO_D B, TSEB_CENTER_INFO_M C 
		WHERE A.USER_ID = #{userId}
		AND A.SEAT_CD = B.SEAT_CD
		AND B.CENTER_CD = C.CENTER_CD
		AND A.RESV_CANCEL_CD IS NULL
		AND ROWNUM = 1
		ORDER BY A.RESV_SEQ DESC		
	]]>	    
    </select>
    
	<!-- 회원 메인페이지 예약정보 조회 -->
	<select id="selectUserResvInfo" resultType="lmap">
	<![CDATA[
		SELECT  
			A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
			A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, B.CENTER_NM, A.RESV_ENTRY_DVSN,
			CASE  
    			WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '입석' 
    			ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    		END AS SEAT_NM,
			CASE WHEN 
			(	
				SELECT 
					NVL(COUNT(*),0) FROM TSER_RESV_INFO_I 
				WHERE SEAT_CD = A.SEAT_CD 
				AND #{params.resvDate} BETWEEN RESV_START_DT AND RESV_END_DT
			) <= 0 THEN 'Y' 
			ELSE 'N'
			END AS RE_RESV_YN, A.RESV_PAY_COST, C.USER_NM, A.RESV_STATE, A.USER_ID, A.CENTER_SPEED_CD,
			B.CENTER_PILOT_YN, A.TRAD_NO, A.TRAD_DATE, A.RESV_ENTRY_DVSN, A.RESV_PAY_COST,
			C.USER_CARD_ID, C.USER_CARD_SEQ, C.USER_CARD_PASSWORD
		 FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B, TEST_USER_INFO C
		 WHERE A.RESV_SEQ = #{params.resvSeq}
		 AND A.CENTER_CD = B.CENTER_CD
		 AND A.USER_ID = C.USER_ID   
	]]>	  
    </select>
    
    <!-- 회원 마이페이지 예약정보 조회 -->
	<select id="selectUserMyResvInfo" resultType="lmap">
    	SELECT
    		A.RESV_SEQ, A.RESV_USER_NM, B.CENTER_NM,
    		CASE  
    			WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '입석' 
    			ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    		END AS SEAT_NM,
    		A.RESV_STATE,
    		FN_DETAILCODENM(A.RESV_STATE) AS RESV_STATE_TEXT,
    		TO_CHAR(TO_DATE(A.RESV_START_DT,'YYYYMMDD'),'YYYY-MM-DD') AS RESV_START_DT,
    		TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE
		FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B 
		WHERE A.CENTER_CD = B.CENTER_CD
		AND A.USER_ID = #{params.userId}
		<choose>
			<when test='params.searchStateCondition == "RESV"'>
				AND A.RESV_STATE NOT IN ('RESV_STATE_3','RESV_STATE_4')
			</when>
			<when test='params.searchStateCondition == "CANCEL"'>
				AND A.RESV_STATE = 'RESV_STATE_4'
			</when>
		</choose>		
		<choose>
			<when test='params.searchDayCondition == "RESV_REQ_DATE"'>
				AND TO_CHAR(A.RESV_REQ_DATE,'YYYYMMDD') BETWEEN #{params.searchDayFrom} AND #{params.searchDayTo}
			</when>
			<otherwise>
				AND A.RESV_START_DT BETWEEN #{params.searchDayFrom} AND #{params.searchDayTo}
			</otherwise>
		</choose>
		ORDER BY A.RESV_REQ_DATE DESC
    </select>
    
	<!-- 비회원 예약정보 조회 -->    
    <select id="selectGuestMyResvInfo" resultType="lmap">
    <![CDATA[
    	SELECT
    		A.RESV_SEQ, A.RESV_USER_NM, B.CENTER_NM,
    		CASE  
    			WHEN A.SEAT_CD IS NULL THEN '입석' 
    			ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    		END AS SEAT_NM,
    		TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE
		FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B 
		WHERE A.CENTER_CD = B.CENTER_CD
		AND A.RESV_USER_NM = #{params.resvUserNm}
		AND A.RESV_USER_CLPHN = #{params.resvUserClphn}
		AND A.RESV_CANCEL_CD IS NULL
		AND TO_NUMBER(CONCAT(A.RESV_END_DT,A.RESV_END_TM)) >= TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MI'))
		AND ROWNUM = 1
	]]> 
    </select>
    
    <!-- 현재 예약 완료한 정보 조회 -->
	<select id="selectInUserResvInfo" resultType="lmap">
		SELECT 
			TO_CHAR(A.RESV_REQ_DATE, 'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.RESV_ENTRY_DVSN, A.USER_ID, B.CENTER_NM, C.FLOOR_NM, D.PART_NM, F.SEAT_NM
		FROM TSER_RESV_INFO_I A, TSEB_CENTER_INFO_M B, TSEB_FLOOR_INFO_M C, TSEB_PART_INFO_D D, TSEB_SEAT_INFO_D F
		WHERE A.RESV_SEQ = #{resvSeq}
		AND A.CENTER_CD = B.CENTER_CD
		AND A.FLOOR_CD = C.FLOOR_CD(+)
		AND A.PART_CD = D.PART_CD(+)
		AND A.SEAT_CD = F.SEAT_CD(+)  	
    </select>
    
	<!-- 회원 현재 예약일자에 대한 예약 유무 조회 -->
	<select id="checkUserResvInfo" resultType="int">
		SELECT NVL(COUNT(*),0) AS CNT
		FROM TSER_RESV_INFO_I A
		WHERE A.USER_ID = #{params.userId}
		AND CONCAT(#{params.resvDate}, TO_CHAR(SYSDATE,'HH24MI')) BETWEEN CONCAT(RESV_START_DT, RESV_START_TM) AND CONCAT(RESV_END_DT, RESV_END_TM)
		AND A.RESV_STATE = 'RESV_STATE_1'
    </select>  
    
	<!-- 입석 좌석 구분값 조회 -->
    <select id="selectResvEntryDvsn" resultType="String">
    	SELECT RESV_ENTRY_DVSN AS resvEntryDvsn FROM TSER_RESV_INFO_I WHERE RESV_SEQ = #{resvSeq}
    </select>
	
	<select id="selectFindPassword" resultType="String">
	    SELECT FN_HASH (#{params.length}, #{params.password)) FROM DUAL
	</select>
	
	
	
	<!-- 예약정보 등록 -->
    <insert id="insertUserResvInfo">
		<selectKey resultType="String" keyProperty="resvSeq" order="BEFORE">
			SELECT SEQ_SER_RERV_INFO.NEXTVAL AS resvSeq FROM DUAL
		</selectKey>
    
    	INSERT INTO TSER_RESV_INFO_I 
    	(
			RESV_SEQ, CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, 
			RESV_START_DT, RESV_END_DT, RESV_DVSN, RESV_START_TM, RESV_END_TM, 
			RESV_REQ_DATE, RESV_USER_DVSN, USER_ID, RESV_USER_NM, RESV_USER_CLPHN, RESV_USER_ASK_YN, RESV_TICKET_DVSN, 
			RESV_STATE, RESV_RCPT_YN, RESV_RCPT_NUMBER, FRST_REGIST_DTM, FRST_REGTER_ID, 
			LAST_UPDT_DTM, LAST_UPDUSR_ID, RESV_ENTRY_DVSN, RESV_PAY_DVSN
		)
		VALUES 
		(
			#{resvSeq} , #{centerCd, jdbcType=VARCHAR}, #{floorCd, jdbcType=VARCHAR}, #{partCd, jdbcType=VARCHAR}, #{seatCd, jdbcType=VARCHAR},
			#{resvDate, jdbcType=VARCHAR}, #{resvDate, jdbcType=VARCHAR}, 'TEMP', '0000', '1900',
			SYSDATE, #{resvUserDvsn, jdbcType=VARCHAR}, 
			<choose>
           		<when test='resvUserDvsn == "USER_DVSN_1"'>
           			#{userId, jdbcType=VARCHAR}, 
				</when>
				<otherwise>
					FN_NON_MEMBERID(#{centerCd}),
				</otherwise>
			</choose>
			#{resvUserNm}, #{resvUserClphn}, #{resvUserAskYn, jdbcType=VARCHAR}, 'RESV_TICKET_DVSN_1',
			'RESV_STATE_1', #{resvRcptYn, jdbcType=VARCHAR}, #{resvRcptNumber, jdbcType=VARCHAR}, SYSDATE, 'admin',
			SYSDATE, 'admin', #{resvEntryDvsn, jdbcType=VARCHAR}, 'RESV_PAY_DVSN_1'	
		)
    </insert>
    
    <update id="resvInfoCancel">
    	UPDATE TSER_RESV_INFO_I SET
    		RESV_STATE = #{params.resvState},
    		RESV_CANCEL_ID = #{params.resvCancelId},
    		RESV_CANCEL_CD = #{params.resvCancelCd},
    		RESV_CANCEL_DT = SYSDATE
    	WHERE RESV_SEQ = #{params.resvSeq}
    </update>
    
	<update id="resPriceChange">
		UPDATE TSER_RESV_INFO_I SET 
		<choose>
			<when test="resvPayDvsn == 'RESV_PAY_DVSN_2'">
				TRAD_NO = #{tradNo},
				TRAD_DATE = SYSDATE,
			</when>
			<otherwise>
				REFOUND_NO = #{tradNo},
				REFOUND_DATE = SYSDATE,
			</otherwise>
		</choose>
		RESV_PAY_DVSN = #{resvPayDvsn}
        WHERE RESV_SEQ = #{resvSeq}
    </update>

	<!-- 입력은 대소문자구분 (to의 필드값)-->
	<select id="resvValidCheck" resultType="string" statementType="CALLABLE">
	{CALL
		KSES_USER.SP_RESV_CENTER_VALID
		(
			#{params.centerCd, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.seatCd, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.checkDvsn, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{params.resultCode, mode=OUT, jdbcType=VARCHAR, javaType=string},
			#{params.resvDate, mode=OUT, jdbcType=VARCHAR, javaType=string}
		)
	}
	</select>     
</mapper>
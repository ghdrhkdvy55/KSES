<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.rsv.longcustomers.mapper.LongcustomersInfoManageMapper">

	<select id="selectLongcustomerList" resultType="lmap">
		SELECT TB.* FROM 
      	(
			SELECT 
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT,
				ROW_NUMBER() OVER (ORDER BY A.LONG_RESV_SEQ DESC) AS RNUM, 
				A.LONG_RESV_SEQ, FN_CODE_NM(A.CENTER_CD,'CENTER') AS CENTER_NM, A.FLOOR_CD, A.PART_CD, FN_CODE_NM(A.SEAT_CD,'SEAT') AS SEAT_NM,
				A.LONG_RESV_START_DT, A.LONG_RESV_END_DT, A.USER_ID, A.EMP_NO, A.SEASON_CD
			FROM TSER_LONG_RESV_INFO_I A 
			WHERE 1=1
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchFrom) and !@org.apache.commons.lang3.StringUtils@isEmpty(params.searchTo)">
				AND A.LONG_RESV_START_DT BETWEEN #{params.searchFrom} AND #{params.searchTo}
				AND A.LONG_RESV_END_DT BETWEEN #{params.searchFrom} AND #{params.searchTo}
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
				AND A.USER_ID LIKE  '%'|| #{params.searchKeyword} ||'%'
			</if>
			<if test="params.authorCd != 'ROLE_ADMIN' and params.authorCd != 'ROLE_SYSTEM'">
				AND A.CENTER_CD = #{params.centerCd}
			</if>	
		)TB  
	   	WHERE RNUM  BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}   
	   	ORDER BY TB.LONG_RESV_SEQ DESC
	</select>
	
   <select id="selectLongcustomerResvList" resultType="lmap">     	      
			SELECT 	
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT, 
				ROW_NUMBER() OVER (ORDER BY TB.RESV_SEQ DESC) AS RNUM, 
				TB.* 
			FROM 	
			(	
				SELECT  
					A.RESV_SEQ, A.SEAT_CD, A.SEASON_CD, A.RESV_START_DT, A.RESV_END_DT, A.RESV_DVSN,
					A.RESV_START_TM, A.RESV_END_TM, TO_CHAR(A.RESV_REQ_DATE,'YYYY-MM-DD HH24:MI') AS RESV_REQ_DATE, A.USER_ID, A.RESV_USER_DVSN,
					A.RESV_USER_ASK_YN, A.RESV_RCPT_YN, A.RESV_RCPT_NUMBER, A.RESV_PAY_COST, A.RESV_PAY_DVSN,
					A.RESV_TICKET_DVSN, A.RESV_STATE, A.RESV_ENTRY_PAY_COST, A.RESV_SEAT_PAY_COST,
					FN_DETAILCODENM(A.RESV_TICKET_DVSN) AS RESV_TICKET_DVSN_TEXT,
					FN_DETAILCODENM(A.RESV_PAY_DVSN) AS RESV_PAY_DVSN_TEXT,
					FN_DETAILCODENM(A.RESV_STATE) AS RESV_STATE_TEXT,
					FN_DETAILCODENM(E.PART_CLASS) AS PART_CLASS,
					CASE  
    					WHEN A.RESV_ENTRY_DVSN = 'ENTRY_DVSN_1'  THEN '자유석' 
    					ELSE (SELECT SEAT_NM FROM TSEB_SEAT_INFO_D WHERE SEAT_CD = A.SEAT_CD)
    				END AS SEAT_NM, 
					C.CENTER_NM, D.USER_NM, REGEXP_REPLACE(D.USER_PHONE, '(02|.{3})(.+)(.{4})', '\1-\2-\3') AS USER_PHONE
				FROM TSER_RESV_INFO_I A, TSEB_SEAT_INFO_D B, TSEB_CENTER_INFO_M C, TSER_USER_INFO_I D, TSEB_PART_INFO_D E
				WHERE A.SEAT_CD = B.SEAT_CD(+)
				AND A.CENTER_CD = C.CENTER_CD
				AND A.USER_ID = D.USER_ID
				AND B.PART_CD = E.PART_CD
				AND A.LONG_RESV_SEQ = #{longResvSeq}
			) TB
			ORDER BY TB.RESV_SEQ DESC	
   	</select>
</mapper>
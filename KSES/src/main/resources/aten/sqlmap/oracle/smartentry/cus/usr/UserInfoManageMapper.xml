<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.cus.usr.mapper.UserInfoManageMapper">
    <select id="selectUserInfoListPage" resultType="lmap">     	      
		SELECT * FROM 
		( 
			SELECT 	
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT, 
				ROW_NUMBER() OVER (ORDER BY ROWNUM ASC) AS RNUM, 
				TB.* 
			FROM 	
			(	
				SELECT A.USER_ID, A.USER_NM,
				A.USER_PHONE, A.USER_EMAIL,
				CASE 
					WHEN A.VACNTN_ROUND IS NULL THEN '입력정보 없음'
					ELSE FN_DETAILCODENM(A.VACNTN_ROUND)
				END AS VACNTN_ROUND_TEXT,
				CASE 
					WHEN A.VACNTN_DVSN IS NULL THEN '입력정보 없음'
					ELSE FN_DETAILCODENM(A.VACNTN_DVSN)
				END AS VACNTN_DVSN_TEXT,
				CASE 
					WHEN A.VACNTN_DT IS NULL THEN '입력정보 없음'
					ELSE TO_CHAR(TO_DATE(A.VACNTN_DT,'YYYY-MM-DD'),'YYYY-MM-DD')
				END AS VACNTN_DT,
				CASE A.USER_SEX_MF 
					WHEN 'M' THEN '남성' 
					ELSE '여성' 
				END AS USER_SEX_MF,
				TO_CHAR(TO_DATE(A.USER_BIRTH_DY, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS USER_BIRTH_DY
				FROM TSER_USER_INFO_I A
				WHERE A.USER_DVSN = 'USER_DVSN_1'
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
					 <choose>
					    <when test="params.searchCondition == 'user_id'">
						    <![CDATA[
						      AND  A.USER_ID LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<when test="params.searchCondition == 'user_nm'">
						    <![CDATA[
						      AND  A.USER_NM LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<when test="params.searchCondition == 'user_phone'">
						    <![CDATA[
						      AND  A.USER_PHONE LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<otherwise>
							AND 
							(
						      	A.USER_ID LIKE '%'|| #{params.searchKeyword}|| '%'
								OR 
								A.USER_NM LIKE '%'|| #{params.searchKeyword}|| '%' 
						        OR 
						        A.USER_PHONE LIKE '%'|| #{params.searchKeyword}|| '%' 
							)
						</otherwise>
					 </choose>
				</if>
				ORDER BY A.USER_NM ASC
			) TB 
		) TA
		WHERE RNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}  
		ORDER BY TA.RNUM ASC 
   	</select>
   	
   	<select id="selectUserInfoDetail" resultType="lmap">
		SELECT 
			USER_ID, USER_NM, USER_PHONE,
			CASE USER_SEX_MF 
				WHEN 'M' THEN '남성' 
				ELSE '여성' 
			END AS USER_SEX_MF, 
			TO_CHAR(TO_DATE(USER_BIRTH_DY, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS USER_BIRTH_DY,
			CASE INDVDLINFO_AGRE_YN 
				WHEN 'Y' THEN '동의' 
				ELSE '동의 안함'
			END AS INDVDLINFO_AGRE_YN, 
			CASE INDVDLINFO_AGRE_DT
				WHEN NULL THEN '동의 안함'
				ELSE TO_CHAR(INDVDLINFO_AGRE_DT, 'yyyy-mm-dd')
			END AS INDVDLINFO_AGRE_DT,
			VACNTN_DVSN, VACNTN_DT, VACNTN_ROUND,
			USER_RCPT_YN, USER_RCPT_DVSN, USER_RCPT_NUMBER,
			LAST_UPDUSR_ID, LAST_UPDT_DTM
		FROM TSER_USER_INFO_I A
		WHERE USER_ID = #{userId}
   	</select>
   	
	<select id="selectSSOUserInfo" resultType="UserLoginInfo">
		SELECT 
			USER_ID, 'USER_DVSN_1' AS USER_DVSN, USER_NM, USER_PHONE, USER_SEX_MF, USER_BIRTH_DY, LAST_UPDUSR_ID, LAST_UPDT_DTM,
			USER_RCPT_YN, USER_RCPT_DVSN, USER_RCPT_NUMBER,
			<![CDATA[
			CASE
				WHEN INDVDLINFO_AGRE_YN = 'N' THEN 'Y'
				WHEN INDVDLINFO_AGRE_YN IS NULL THEN 'Y' 
				WHEN INDVDLINFO_AGRE_DT IS NULL THEN 'Y'
				WHEN INDVDLINFO_AGRE_DT < TO_CHAR(TO_DATE(SYSDATE - (INTERVAL '3' YEAR)),'YYYYMMDD') THEN 'Y'
			ELSE 'N'
			END AS indvdlinfoAgreYn
			]]>
		FROM TSER_USER_INFO_I
		<choose>
		<when test="@org.apache.commons.lang3.StringUtils@equals(params.envType,'CLOUD')">
			WHERE USER_CARD_ID = #{params.cardId, jdbcType=VARCHAR}
		</when>
		<otherwise>
			WHERE USER_CARD_ID = (SELECT REPLACE(FC_DEC(#{params.cardId, jdbcType=VARCHAR}),' ','+') FROM DUAL)
			AND USER_CARD_SEQ = #{params.cardSeq, jdbcType=VARCHAR}
		</otherwise>
		</choose>
   	</select>
   	
   	<select id="selectDecodeCardId" resultType="String">
   		SELECT REPLACE(FC_DEC(#{cardId, jdbcType=VARCHAR}),' ','+') FROM DUAL
   	</select>
   	
	<select id="selectUserVacntnInfo" resultType="lmap">
	<![CDATA[
   		SELECT 
   			FN_DETAILCODENM(A.VACNTN_ROUND) AS VACNTN_ROUND_TEXT, 
   			FN_DETAILCODENM(A.VACNTN_DVSN) AS VACNTN_DVSN_TEXT, 
   			TO_CHAR(TO_DATE(A.VACNTN_DT,'YYYY-MM-DD'),'YYYY-MM-DD') AS VACNTN_DT,  
			CASE 
				WHEN A.VACNTN_DT IS NULL THEN 'NO_INFO'  
				WHEN A.VACNTN_DT > TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYYMMDD') THEN 'Y'
			ELSE 'N' END AS PASS_YN
		FROM TSER_USER_INFO_I A
		WHERE USER_ID = #{userId, jdbcType=VARCHAR}
	]]>	
   	</select>
   	
   	<select id="selectSpeedOnVacntnInfo" resultType="lmap">
   		SELECT USER_ID, COVID_DY FROM
   		<choose>
			<when test="@org.apache.commons.lang3.StringUtils@equals(envType,'DEV')">
   				VW_KRACEWEB@SMARTDEVLINK
   			</when>
   			<when test="@org.apache.commons.lang3.StringUtils@equals(envType,'PROD')">
   				VW_KRACEWEB@SMARTENTRLINK
   			</when>
   		</choose>
   		WHERE USER_ID = #{userId}
   	</select>
	
	<insert id="insertUserInfo">
	    MERGE INTO TSER_USER_INFO_I A
	    USING DUAL B
	    ON 
		(	
			A.USER_ID = #{userId}
		)
		WHEN MATCHED THEN
		UPDATE SET 
			USER_NM = #{userNm, jdbcType=VARCHAR}, 
			USER_PHONE = #{userPhone, jdbcType=VARCHAR},
			USER_DVSN = #{userDvsn, jdbcType=VARCHAR}, 
			USER_SEX_MF = #{userSexMf, jdbcType=VARCHAR}, 
			USER_BIRTH_DY = #{userBirthDy, jdbcType=VARCHAR},
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(indvdlinfoAgreYn)">
				INDVDLINFO_AGRE_YN = #{indvdlinfoAgreYn, jdbcType=VARCHAR},
				INDVDLINFO_AGRE_DT = SYSDATE,
				VACNTN_DT = #{vacntnDt, jdbcType=VARCHAR},
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(mktginfoAgreYn)">
				MARKETING_AGRE_YN = #{mktginfoAgreYn, jdbcType=VARCHAR},
				MARKETING_AGRE_DT = SYSDATE,
			</if>
			USER_CARD_ID = #{userCardId, jdbcType=VARCHAR}, 
            USER_CARD_NO = #{userCardNo, jdbcType=VARCHAR},
            USER_CARD_SEQ = #{userCardSeq, jdbcType=VARCHAR},
            LAST_UPDUSR_ID = #{userId},  
			LAST_UPDT_DTM = SYSDATE,  
			LAST_LOGIN_DT = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT	
		(
			USER_ID, USER_NM, USER_PHONE, USER_DVSN, USER_CARD_ID,  
			USER_CARD_NO, USER_CARD_SEQ, USER_SEX_MF, USER_BIRTH_DY, LAST_UPDUSR_ID, 
			LAST_UPDT_DTM 
		)
		VALUES 
		(
			#{userId}, #{userNm}, #{userPhone, jdbcType=VARCHAR}, #{userDvsn, jdbcType=VARCHAR}, #{userCardId, jdbcType=VARCHAR}, 
			#{userCardNo, jdbcType=VARCHAR}, #{userCardSeq, jdbcType=VARCHAR}, #{userSexMf, jdbcType=VARCHAR}, #{userBirthDy, jdbcType=VARCHAR}, #{userId, jdbcType=VARCHAR}, 
			SYSDATE
		)		
		
		<selectKey resultType="UserLoginInfo" keyProperty="indvdlinfoAgreYn,userRcptYn,userRcptDvsn,userRcptNumber" order="AFTER">
        	SELECT
        		<![CDATA[
        		CASE
        			WHEN INDVDLINFO_AGRE_YN = 'N' THEN 'Y'
        			WHEN INDVDLINFO_AGRE_YN IS NULL THEN 'Y' 
        			WHEN INDVDLINFO_AGRE_DT IS NULL THEN 'Y'
	        		WHEN INDVDLINFO_AGRE_DT < TO_CHAR(TO_DATE(SYSDATE - (INTERVAL '3' YEAR)),'YYYYMMDD') THEN 'Y'
        		ELSE 'N'
        		END AS indvdlinfoAgreYn,
        		]]>
        		USER_RCPT_YN AS userRcptYn,
        		USER_RCPT_DVSN AS userRcptDvsn,
        		USER_RCPT_NUMBER AS userRcptNumber 
        	FROM TSER_USER_INFO_I WHERE USER_ID = #{userId, jdbcType=VARCHAR}   
    	</selectKey>    
	</insert>

	<update id="updateUserInfo">
		UPDATE TSER_USER_INFO_I SET 
			VACNTN_DVSN = #{vacntnDvsn, jdbcType=VARCHAR}, 
			VACNTN_DT = #{vacntnDt, jdbcType=VARCHAR}, 
			VACNTN_ROUND = #{vacntnRound, jdbcType=VARCHAR},
			LAST_UPDUSR_ID = #{lastUpdusrId},
			LAST_UPDT_DTM = SYSDATE
		WHERE USER_ID = #{userId}
   	</update>
   	
	<update id="updateUserRcptInfo">
		UPDATE TSER_USER_INFO_I SET 
			USER_RCPT_YN = #{userRcptYn, jdbcType=VARCHAR}, 
			USER_RCPT_DVSN = #{userRcptDvsn, jdbcType=VARCHAR}, 
			USER_RCPT_NUMBER = #{userRcptNumber, jdbcType=VARCHAR},
			LAST_UPDUSR_ID = #{userId}, 
			LAST_UPDT_DTM = SYSDATE                      
		WHERE USER_ID = #{userId}
   	</update>
   	
	<update id="updateUserNoshowCount">
	{CALL
		DECLARE
		BEGIN
              
		<selectKey keyProperty="cnt" resultType="Integer" order="BEFORE">
			SELECT NVL(COUNT(*),0) AS cnt
			FROM TSER_BLKLST_INFO_I
			WHERE USER_ID = #{userId}
			AND BLKLST_DVSN = 'BLKLST_DVSN_3'       
		</selectKey>
		
		<if test="cnt == 0">
			INSERT INTO TSER_BLKLST_INFO_I 
			(
				BLKLST_SEQ, USER_ID, USER_DVSN, USER_CLPHN, BLKLST_DVSN, 
				BLKLST_REASON, BLKLST_CANCEL_YN, FRST_REGTER_ID, FRST_REGIST_DTM, LAST_UPDUSR_ID, 
				LAST_UPDT_DTM
			)
			VALUES
			(
				SEQ_SER_BLKLIST_INFO.NEXTVAL, #{userId}, 'USER_DVSN_1', (SELECT USER_PHONE FROM TSER_USER_INFO_I WHERE USER_ID = #{userId}), 'BLKLST_DVSN_3', 
				'노쇼 패널티 고객', 'Y', 'BATCH', SYSDATE, 'BATCH', 
				SYSDATE
			);
		</if>	
			
		UPDATE TSER_USER_INFO_I SET
			USER_NOSHOW_CNT = USER_NOSHOW_CNT + 1
		WHERE USER_ID = #{userId};
		
		END
	}
   	</update>
   	
   	<update id="updateUserPhoneNumber">
   		MERGE INTO TSER_USER_INFO_I A
   		USING
		<choose>
			<when test="@org.apache.commons.lang3.StringUtils@equals(envType,'DEV')">
   				VW_KRACEWEB@SMARTDEVLINK
   			</when>
   			<when test="@org.apache.commons.lang3.StringUtils@equals(envType,'PROD')">
   				VW_KRACEWEB@SMARTENTRLINK
   			</when>
   		</choose>
   		B ON (A.USER_ID = B.USER_ID)
   		WHEN MATCHED THEN
   		UPDATE SET A.USER_PHONE = B.MOBILE
   		WHERE A.USER_ID = B.USER_ID
   		AND A.USER_PHONE != B.MOBILE
   	</update>

   	<delete id="deleteUserInfo">
   	    <foreach collection="delCds" item="item" separator=";" open="DECLARE BEGIN" close="; END;">  
   	         DELETE FROM TSER_USER_INFO_I WHERE USER_ID= #{item}
	    </foreach>		
   	</delete>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.bld.season.mapper.SeasonSeatInfoManageMapper">
    <select id="selectSeasonSeatInfoList" resultType="lmap">
		SELECT TB.* FROM 
		(
			SELECT  
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT,
				ROW_NUMBER() OVER (ORDER BY A.SEAT_ORDER DESC) AS RNUM, 
				A.CENTER_CD, A.FLOOR_CD, A.PART_CD, E.SEASON_SEAT_CD,  A.SEAT_CD, E.SEASON_SEAT_LABEL, 
				E.USE_YN, E.SEASON_SEAT_TOP, E.SEASON_SEAT_LEFT, 
				FN_DETAILCODENM(E.SEASON_CLASS) AS SEAT_CLASS_TXT,  FN_DETAILCODENM(E.SEAT_DVSN) AS SEAT_DVSN_TXT,
				TO_CHAR(A.LAST_UPDT_DTM, 'yyyy-mm-dd') AS LAST_UPDT_DTM, A.LAST_UPDUSR_ID, 
				E.SEASON_COST, E.SEASON_AM_COST, E.SEASON_PM_COST,  E.SEASON_SEAT_ORDER, B.CENTER_NM,  
				C.FLOOR_NM, C.FLOOR_INFO, 
				DECODE(A.PART_CD,'0','구역 미사용', D.PART_NM) AS PART_NM
			FROM TSEB_SEAT_INFO_D A, TSEB_CENTER_INFO_M B, TSEB_FLOOR_INFO_M C, TSEB_PART_INFO_D D, TSEB_SEASON_STINFO_D E
			WHERE A.CENTER_CD = B.CENTER_CD  
			AND A.FLOOR_CD = C.FLOOR_CD
			AND A.SEAT_CD = E.SEAT_CD
			AND A.PART_CD = D.PART_CD(+)
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
				AND ( A.SEAT_NM LIKE '%' || #{params.searchKeyword} ||'%' OR  E.SEASON_SEAT_LABEL LIKE '%' || #{params.searchKeyword} ||'%')
			</if>	
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchCenterCd)">
				AND A.CENTER_CD = #{params.searchCenterCd}
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchFloorCd)">
				AND A.FLOOR_CD = #{params.searchFloorCd}
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchPartCd)">
				AND TRIM(A.PART_CD) = #{params.searchPartCd}
			</if>
			<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.seasonCd)">
				AND E.SEASON_CD = #{params.seasonCd}
			</if>			
		) TB  
		WHERE RNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}
		ORDER BY TB.SEASON_SEAT_CD DESC  	 	    
    </select>
    
    <select id="selectSeasonSeatInfoDetail"  resultType="lmap">
		SELECT  
			B.SEASON_SEAT_CD, B.SEASON_CD, B.CENTER_CD, B.FLOOR_CD, B.PART_CD, B.SEAT_CD,
            B.SEASON_COST, B.SEASON_AM_COST, B.SEASON_PM_COST, B.SEAT_DVSN, B.SEASON_CLASS,
            B.USE_YN, B.FRST_REGIST_DTM, B.FRST_REGTER_ID, B.LAST_UPDT_DTM, B.LAST_UPDUSR_ID,
            B.SEASON_SEAT_TOP, B.SEASON_SEAT_LEFT, B.SEASON_SEAT_LABEL, B.SEASON_SEAT_ORDER
		FROM TSEB_SEAT_INFO_D A, TSEB_SEASON_STINFO_D B
		WHERE A.SEAT_CD = B.SEAT_CD
		AND B.SEASON_SEAT_CD = #{seasonSeatCd}
    </select>
    
	<!-- 사용자 예약 화면 표출 시즌 좌석 리스트 조회 -->
	<select id="selectReservationSeasonSeatList" resultType="lmap">
		SELECT 
			B.PART_CD, B.PART_NM, C.SEASON_SEAT_CD, C.SEAT_CD, C.SEASON_SEAT_LABEL AS SEAT_NM, C.SEASON_SEAT_TOP AS SEAT_TOP, 
			C.SEASON_SEAT_LEFT AS SEAT_LEFT, C.SEASON_COST AS PAY_COST, C.SEASON_SEAT_ORDER AS SEAT_ORDER,
			FN_DETAILCODENM(C.SEASON_CLASS) AS SEAT_CLASS_TXT,  
			FN_DETAILCODENM(C.SEAT_DVSN) AS SEAT_DVSN_TXT,
			CASE WHEN 
			(
				SELECT NVL(COUNT(*),0) 
         		FROM TSER_RESV_INFO_I
         		WHERE PART_CD = B.PART_CD
         		AND SEAT_CD = C.SEAT_CD 
         		AND RESV_SEQ = #{params.resvSeq, jdbcType=VARCHAR}
				<choose>
					<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'LONG')">
						AND RESV_END_DT BETWEEN #{params.resvDateFrom} AND #{params.resvDateTo}
					</when>
					<otherwise> 
						AND RESV_END_DT = #{params.resvDate, jdbcType=VARCHAR}
					</otherwise>
				</choose>
         		AND RESV_STATE NOT IN ('RESV_STATE_3')
			) > 0  THEN '1'
			WHEN
			(
				SELECT NVL(COUNT(*),0) 
         		FROM TSER_RESV_INFO_I 
         		WHERE PART_CD = B.PART_CD
         		AND SEAT_CD = C.SEAT_CD
				<choose>
					<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'LONG')">
						AND RESV_END_DT BETWEEN #{params.resvDateFrom} AND #{params.resvDateTo}
					</when>
					<otherwise> 
						AND RESV_END_DT = #{params.resvDate, jdbcType=VARCHAR}
					</otherwise>
				</choose>
         		AND RESV_STATE NOT IN ('RESV_STATE_3')
			) > 0  THEN '2'
			ELSE '0' END AS status
		FROM TSEB_SEASON_M A, TSEB_PART_INFO_D B, TSEB_SEASON_STINFO_D C
		WHERE A.SEASON_CD = #{params.seasonCd}
		AND A.SEASON_CD = C.SEASON_CD 
		AND B.PART_CD = #{params.partCd}
		AND B.PART_CD = C.PART_CD
		AND C.USE_YN = 'Y'
    </select>

    <update id="updateSeasonSeatInfo" >
		UPDATE TSEB_SEASON_STINFO_D SET CENTER_CD = #{centerCd}, 
										FLOOR_CD = #{floorCd, jdbcType=VARCHAR}, 
										PART_CD = #{partCd, jdbcType=VARCHAR}, 
										SEASON_SEAT_LABEL = #{seasonSeatLabel}, 
										USE_YN = #{useYn, jdbcType=VARCHAR},
										SEASON_CLASS = #{seasonClass, jdbcType=VARCHAR},  
										SEAT_DVSN = #{seatDvsn, jdbcType=VARCHAR}, 
										PAY_DVSN = #{payDvsn, jdbcType=VARCHAR}, 
										SEASON_COST = #{seasonCost, jdbcType=VARCHAR},
										SEASON_SEAT_LABEL = #{seasonSeatLabel, jdbcType=VARCHAR},
										SEASON_SEAT_ORDER = #{seasonSeatOrder, jdbcType=VARCHAR},
										SEASON_SEAT_TOP = #{seasonSeatTop, jdbcType=VARCHAR},
										SEASON_SEAT_LEFT = #{seasonSeatLeft, jdbcType=VARCHAR},
										SEASON_AM_COST = 0,
										SEASON_PM_COST = 0,   
										LAST_UPDUSR_ID = #{lastUpdusrId, jdbcType=VARCHAR},   
										LAST_UPDT_DTM = SYSDATE
	    WHERE SEASON_SEAT_CD = #{seasonSeatCd}           
    </update>
    
    <update id="updateSeasonSeatPositionInfo" parameterType="java.util.List">
		<foreach collection="seasonSeatInfoList" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE TSEB_SEASON_STINFO_D SET SEASON_COST = #{item.seasonCost, jdbcType=VARCHAR},
											SEASON_SEAT_LABEL = #{item.seasonSeatLabel, jdbcType=VARCHAR},
											<!-- SEASON_SEAT_ORDER = #{item.seasonSeatOrder, jdbcType=VARCHAR}, -->
											SEASON_SEAT_TOP = #{item.seasonSeatTop, jdbcType=VARCHAR},
											SEASON_SEAT_LEFT = #{item.seasonSeatLeft, jdbcType=VARCHAR},
											USE_YN = #{item.useYn, jdbcType=VARCHAR},
				                            LAST_UPDT_DTM = SYSDATE, 
				                            LAST_UPDUSR_ID = #{item.lastUpdusrId, jdbcType=VARCHAR}
			WHERE SEASON_SEAT_CD = #{item.seasonSeatCd} 
		</foreach> 
    </update> 
    
    <delete id="deleteSeasonSeatInfo">
	{CALL
		DECLARE
		BEGIN
		    DELETE FROM TSEB_SEASON_STINFO_D WHERE SEASON_SEAT_CD IN
	        <foreach collection="seasonSeatList" item="item"  open="(" separator="," close=")">
	            #{item}
	        </foreach>
	        ;
		END
	}
    </delete>
    


</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.bld.season.mapper.SeasonInfoManageMapper">
	<select id="selectSeasonInfoList" resultType="lmap">     	      
		SELECT * FROM 
		( 
			SELECT 	
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT, 
				ROW_NUMBER() OVER (ORDER BY ROWNUM DESC) AS RNUM, 
				TB.* 
			FROM 	
			(	
				SELECT SEASON_CD, SEASON_START_DAY, SEASON_END_DAY, USE_YN, SEASON_NM,
                       SEASON_DC, FRST_REGIST_DTM, FRST_REGTER_ID, TO_CHAR( LAST_UPDT_DTM, 'YYYY-MM-DD') LAST_UPDT_DTM, LAST_UPDUSR_ID,
                       FN_SEASON_CENTERNM(A.SEASON_CENTERINFO) SEASON_CENTERINFO
				FROM TSEB_SEASON_M A
				WHERE 1=1
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
					<choose>
						<when test="params.searchCondition == 'SEASON_NM'">
							AND SEASON_NM LIKE '%' || #{params.searchKeyword} || '%' 
						</when>	
						
						<when test="params.searchCondition == 'SEASON_DC'">
							AND SEASON_DC LIKE '%' || #{params.searchKeyword} || '%' 
						</when>		
										
						<otherwise>
							AND 
							(
								SEASON_NM LIKE '%' || #{params.searchKeyword} || '%' 
								OR SEASON_DC LIKE '%' || #{params.searchKeyword} || '%' 
							)
						</otherwise>
						
					</choose>
				</if>
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchCenter)">
				    AND INSTR(A.SEASON_CENTERINFO,  #{params.searchCenter})  > 0
				</if>
			) TB 
		) TA
		WHERE ROWNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}  
		ORDER BY TA.RNUM DESC 
   	</select>

   	<select id="selectSeasonInfoDetail" resultType="lmap">
		SELECT A.SEASON_CD, A.SEASON_START_DAY, A.SEASON_END_DAY, A.USE_YN, A.SEASON_NM, SEASON_CENTERINFO,
               A.SEASON_DC, A.FRST_REGIST_DTM, A.FRST_REGTER_ID, A.LAST_UPDT_DTM, A.LAST_UPDUSR_ID
		FROM TSEB_SEASON_M A
		WHERE SEASON_CD = #{seasonCd}
   	</select>
   	
   	<select id="selectSeasonCenterInfoList" resultType="lmap">
		SELECT A.CENTER_CD, A.CENTER_NM
		FROM TSEB_CENTER_INFO_M A, 
		     ( SELECT COLUMN_VALUE FROM TABLE (UF_SPLICT((SELECT SEASON_CENTERINFO FROM TSEB_SEASON_M WHERE SEASON_CD = #{seasonCenterinfo}), ',')) ) B
		WHERE A.CENTER_CD = B.COLUMN_VALUE
   	</select>
   	
   	<select id="selectSeasonCenterInclude" resultType="int">
   	     SELECT NVL(COUNT(COLUMN_VALUE),0) FROM TABLE (UF_SPLICT(
   	         (SELECT SEASON_CENTERINFO
   	          FROM TSEB_SEASON_M
   	          WHERE  (#{seasonStartDay}  BETWEEN SEASON_START_DAY AND SEASON_END_DAY 
   	                  OR  #{seasonEndDay} BETWEEN SEASON_START_DAY AND SEASON_END_DAY )
   	                  <if test="mode == 'Edt'">
   	                     AND SEASON_CD != #{seasonCd}
   	                  </if>
   	                  AND USE_YN ='Y'
   	          )
   	    , ','))
   	    WHERE COLUMN_VALUE IN (SELECT COLUMN_VALUE FROM TABLE (UF_SPLICT(#{seasonCenterinfo,jdbcType=VARCHAR}, ',')))
   	</select>
   	
   	<select id="selectCenterSeasonCd" resultType="String">
   		SELECT TB.SEASON_CD 
   		FROM 
   		(
			SELECT A.SEASON_CD 
			FROM TSEB_SEASON_M A
			WHERE A.SEASON_CENTERINFO LIKE '%' || #{params.centerCd} ||'%'
			<choose>
				<when test="@org.apache.commons.lang3.StringUtils@equals(params.searchCondition,'LONG')">
					AND 
					(
						#{params.resvDateFrom} BETWEEN SEASON_START_DAY AND SEASON_END_DAY
						OR 
						#{params.resvDateTo} BETWEEN SEASON_START_DAY AND SEASON_END_DAY
					)
				</when>
				<otherwise>
					AND #{params.resvDate} BETWEEN SEASON_START_DAY AND SEASON_END_DAY
				</otherwise>
			</choose>
			ORDER BY SEASON_START_DAY   		
   		) TB
   		WHERE ROWNUM = 1
   	</select>
   	
    <insert id="insertSeasonInfo">
       {CALL
			DECLARE
			BEGIN
              
	        <selectKey resultType="String" keyProperty="seasonCd"   order="BEFORE">
	               SELECT KSES_USER.FN_SEASON_CD() FROM DUAL
	        </selectKey>
	        
			INSERT INTO TSEB_SEASON_M	
			(
			    SEASON_CD, SEASON_START_DAY, SEASON_END_DAY, USE_YN, SEASON_NM, SEASON_DC, 
			    FRST_REGIST_DTM, FRST_REGTER_ID, LAST_UPDT_DTM, LAST_UPDUSR_ID, SEASON_CENTERINFO
			)
			VALUES 
			(
				#{seasonCd}, #{seasonStartDay}, #{seasonEndDay}, #{useYn,jdbcType=VARCHAR}, #{seasonNm,jdbcType=VARCHAR}, #{seasonDc,jdbcType=VARCHAR},
				SYSDATE, #{userId}, SYSDATE, #{userId}, #{seasonCenterinfo,jdbcType=VARCHAR}
			);
			
			INSERT INTO TSEB_SEASON_STINFO_D (SEASON_SEAT_CD, SEASON_CD, 
			                                  CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, SEASON_COST, SEASON_AM_COST, SEASON_PM_COST, 
			                                  SEASON_SEAT_TOP, SEASON_SEAT_LEFT,SEASON_SEAT_WIDTH, SEASON_SEAT_HEIGHT,
                                              SEAT_DVSN, SEASON_CLASS, USE_YN, SEASON_SEAT_LABEL, SEASON_SEAT_ORDER, SEASON_SEAT_NUMBER,
                                              FRST_REGIST_DTM, FRST_REGTER_ID, LAST_UPDT_DTM, LAST_UPDUSR_ID)
			SELECT #{seasonCd} || SEAT_CD  SEASON_SEAT_CD,  #{seasonCd} SEASON_CD, 
			       CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, PAY_COST, PAY_AM_COST, PAY_PM_COST,
			       SEAT_TOP, SEAT_LEFT, SEAT_WIDTH, SEAT_HEIGHT,
			       PAY_DVSN, SEAT_CLASS, USE_YN, SEAT_NM, SEAT_ORDER, SEAT_NUMBER,
			       SYSDATE, #{userId}, SYSDATE, #{userId}
			FROM TSEB_SEAT_INFO_D 
			WHERE CENTER_CD IN (SELECT COLUMN_VALUE FROM TABLE (UF_SPLICT(#{seasonCenterinfo}, ','))
			);
			
		   END
		}
		
   	</insert>

	<update id="updateSeasonInfo">
	   {CALL
			DECLARE
			BEGIN    
	            <!--  삭제 먼저 하기 -->
	            DELETE FROM TSEB_SEASON_STINFO_D
	            WHERE CENTER_CD IN (
	                   SELECT COLUMN_VALUE FROM TABLE (UF_SPLICT((SELECT  SEASON_CENTERINFO FROM  TSEB_SEASON_M WHERE  SEASON_CD=#{seasonCd}) , ','))
                       MINUS
                       SELECT COLUMN_VALUE FROM TABLE (UF_SPLICT(#{seasonCenterinfo}, ','))
                       )
                       AND  SEASON_CD = #{seasonCd};
                <!--  추가 센터 연동 하기 -->
	            INSERT INTO TSEB_SEASON_STINFO_D (SEASON_SEAT_CD, SEASON_CD, 
			                                  CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, SEASON_COST, SEASON_AM_COST, SEASON_PM_COST, 
			                                  SEASON_SEAT_TOP, SEASON_SEAT_LEFT,SEASON_SEAT_WIDTH, SEASON_SEAT_HEIGHT,
                                              SEAT_DVSN, SEASON_CLASS, USE_YN, SEASON_SEAT_LABEL, SEASON_SEAT_ORDER, 
                                              FRST_REGIST_DTM, FRST_REGTER_ID, LAST_UPDT_DTM, LAST_UPDUSR_ID)
			    SELECT #{seasonCd} || SEAT_CD  SEASON_SEAT_CD,  #{seasonCd} SEASON_CD, 
				       CENTER_CD, FLOOR_CD, PART_CD, SEAT_CD, PAY_COST, PAY_AM_COST, PAY_PM_COST,
				       SEAT_TOP,SEAT_LEFT, SEAT_WIDTH, SEAT_HEIGHT,
				       PAY_DVSN, SEAT_CLASS, USE_YN, SEAT_NM, SEAT_ORDER,
				       SYSDATE, #{userId}, SYSDATE, #{userId}
			    FROM TSEB_SEAT_INFO_D 
			    WHERE CENTER_CD IN (
			           SELECT COLUMN_VALUE FROM TABLE (UF_SPLICT(#{seasonCenterinfo}, ','))
                       MINUS
                       SELECT COLUMN_VALUE FROM TABLE (UF_SPLICT((SELECT  SEASON_CENTERINFO FROM  TSEB_SEASON_M WHERE  SEASON_CD=#{seasonCd}) , ','))
			           )
			    ;
			    
				UPDATE TSEB_SEASON_M SET SEASON_START_DAY = #{seasonStartDay,jdbcType=VARCHAR}, 
				                         SEASON_END_DAY = #{seasonEndDay, jdbcType=VARCHAR}, 
				                         USE_YN = #{useYn, jdbcType=VARCHAR}, 
				                         SEASON_NM = #{seasonNm, jdbcType=VARCHAR}, 
				                         SEASON_DC = #{seasonDc, jdbcType=VARCHAR}, 
				                         LAST_UPDT_DTM = SYSDATE,     
				                         LAST_UPDUSR_ID = #{userId, jdbcType=VARCHAR},
				                         SEASON_CENTERINFO =  #{seasonCenterinfo,jdbcType=VARCHAR}            
		        WHERE SEASON_CD = #{seasonCd};
		    END
		 }
   	</update>
   	
   	<delete id="deleteSeasonInfo">
   	<!-- 추후 삭제시 메뉴 에서 삭제 시키기 -->
	{CALL
		DECLARE
		BEGIN
		
 	    DELETE FROM TSEB_SEASON_M
   		WHERE SEASON_CD IN
		      <foreach collection="seasonList" item="item"  open="(" separator="," close=")">
	          #{item}
	          </foreach>
	    ;
   		DELETE FROM TSEB_SEASON_STINFO_D
   		WHERE SEASON_CD IN
	   		 <foreach collection="seasonList" item="item"  open="(" separator="," close=")">
             #{item}
            </foreach>
	    ;
		END
	}	
   	</delete>
  </mapper>
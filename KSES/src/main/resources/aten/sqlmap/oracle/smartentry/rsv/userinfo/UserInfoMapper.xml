<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.rsv.userInfo.mapper.UserInfoMapper">

<select id="selectUserInfoListByPagination" resultType="lmap">     	      
		SELECT * FROM 
		( 
			SELECT 	
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT, 
				ROW_NUMBER() OVER (ORDER BY ROWNUM DESC) AS RNUM, 
				TB.* 
			FROM 	
			(	
				SELECT A.USER_ID, A.USER_NM, A.USER_PHONE, A.USER_EMAIL, A.USER_SEX_MF, TO_CHAR(TO_DATE(A.USER_BIRTH_DY, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS USER_BIRTH_DY
				FROM TEST_USER_INFO A
				WHERE A.USER_DVSN = 'USER_DVSN_1'
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
					 <choose>
					    <when test="params.searchCondition == 'USER_ID'">
						    <![CDATA[
						      AND  a.USER_ID LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<when test="params.searchCondition == 'USER_NM'">
						    <![CDATA[
						      AND  a.USER_NM LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<when test="params.searchCondition == 'USER_PHONE'">
						    <![CDATA[
						      AND  a.USER_PHONE LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<otherwise>
						      AND (a.USER_ID LIKE '%'|| #{params.searchKeyword}|| '%'
						           OR a.USER_NM LIKE '%'|| #{params.searchKeyword}|| '%' 
						           OR a.USER_PHONE LIKE '%'|| #{params.searchKeyword}|| '%' 
						           )
						</otherwise>
					 </choose>
				</if>
				ORDER BY A.USER_NM DESC
			) TB 
		) TA
		WHERE ROWNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}  
		ORDER BY TA.RNUM DESC 
   	</select>
   		
   	   	<select id="selectUserDetail" resultType="lmap">
		SELECT A.USER_ID, A.USER_NM, A.USER_PHONE, A.USER_EMAIL, A.USER_SEX_MF, A.USER_BIRTH_DY,
		A.INDVDLINFO_AGRE_YN, A.INDVDLINFO_AGRE_DT, A.VACNTN_DVSN, A.VACNTN_DT, A.VACNTN_ROUND
		FROM TEST_USER_INFO A
		WHERE A.USER_ID = #{userId}
   	</select>
   	
   	 <update id="updateHolyInfo">
		UPDATE TSEC_HOLY_INFO_M SET HOLY_DT = #{holyDt, jdbcType=VARCHAR}, 
		                            HOLY_NM = #{holyNm, jdbcType=VARCHAR}, 
		                            USE_YN = #{useYn, jdbcType=VARCHAR},
		                            LAST_UPDT_DTM = SYSDATE,
		                            LAST_UPDUSR_ID =  #{userId,jdbcType=VARCHAR}       
       	WHERE HOLY_SEQ = #{holySeq, jdbcType=VARCHAR}
   	</update>
</mapper>
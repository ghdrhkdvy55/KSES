<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kses.backoffice.rsv.userInfo.mapper.UserInfoMapper">

<select id="selectUserInfoListByPagination" resultType="lmap">     	      
		SELECT * FROM 
		( 
			SELECT 	
				SUM(1) OVER(PARTITION BY NULL) AS TOTAL_RECORD_COUNT, 
				ROW_NUMBER() OVER (ORDER BY ROWNUM DESC) AS RNUM, 
				TB.* 
			FROM 	
			(	
				SELECT A.USER_ID, A.USER_NM,
				A.USER_PHONE, A.USER_EMAIL, A.USER_SEX_MF, TO_CHAR(TO_DATE(A.USER_BIRTH_DY, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS USER_BIRTH_DY
				FROM TEST_USER_INFO A
				WHERE A.USER_DVSN = 'USER_DVSN_1'
				<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(params.searchKeyword)">
					 <choose>
					    <when test="params.searchCondition == 'USER_ID'">
						    <![CDATA[
						      AND  a.USER_ID LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<when test="params.searchCondition == 'USER_NM'">
						    <![CDATA[
						      AND  a.USER_NM LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<when test="params.searchCondition == 'USER_PHONE'">
						    <![CDATA[
						      AND  a.USER_PHONE LIKE '%'|| #{params.searchKeyword}|| '%' 
						     ]]> 
						</when>	
						<otherwise>
						      AND (a.USER_ID LIKE '%'|| #{params.searchKeyword}|| '%'
						           OR a.USER_NM LIKE '%'|| #{params.searchKeyword}|| '%' 
						           OR a.USER_PHONE LIKE '%'|| #{params.searchKeyword}|| '%' 
						           )
						</otherwise>
					 </choose>
				</if>
				ORDER BY A.USER_NM DESC
			) TB 
		) TA
		WHERE ROWNUM BETWEEN #{params.firstIndex} + 1 AND #{params.firstIndex} + #{params.recordCountPerPage}  
		ORDER BY TA.RNUM DESC 
   	</select>
   		
	<select id="selectUserDetail" resultType="lmap">
		SELECT 
			A.USER_ID, A.USER_NM, A.USER_PHONE, A.USER_EMAIL, 
			CASE A.USER_SEX_MF 
				WHEN 'M' THEN '남성' 
				ELSE '여성' 
			END AS USER_SEX_MF, 
			TO_CHAR(TO_DATE(A.USER_BIRTH_DY, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS USER_BIRTH_DY,
			CASE A.INDVDLINFO_AGRE_YN 
				WHEN 'Y' THEN '동의' 
				ELSE '반대' 
			END AS INDVDLINFO_AGRE_YN, 
			TO_CHAR(TO_DATE(A.INDVDLINFO_AGRE_DT, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS INDVDLINFO_AGRE_DT, 
			A.VACNTN_DVSN, A.VACNTN_DT, A.VACNTN_ROUND
		FROM TEST_USER_INFO A
		WHERE A.USER_ID = #{userId}
   	</select>
   	
   	<select id="selectUserVacntnInfo" resultType="lmap">
	<![CDATA[
   		SELECT 
   			FN_DETAILCODENM(A.VACNTN_ROUND) AS VACNTN_ROUND_TEXT, 
   			FN_DETAILCODENM(A.VACNTN_DVSN) AS VACNTN_DVSN_TEXT, 
   			TO_CHAR(TO_DATE(A.VACNTN_DT,'YYYY-MM-DD'),'YYYY-MM-DD') AS VACNTN_DT,  
			CASE 
				WHEN A.VACNTN_DT IS NULL THEN 'NO_INFO'  
				WHEN A.VACNTN_DT < TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYYMMDD') THEN 'Y'
			ELSE 'N' END AS PASS_YN
		FROM TEST_USER_INFO A
		WHERE USER_ID = #{userId, jdbcType=VARCHAR}
	]]>	
   	</select>
   	
	<update id="updateUser">
		UPDATE TEST_USER_INFO SET 
			VACNTN_DVSN = #{vacntnDvsn, jdbcType=VARCHAR}, 
			VACNTN_DT = #{vacntnDt, jdbcType=VARCHAR}, 
			VACNTN_ROUND = #{vacntnRound, jdbcType=VARCHAR} 
       	WHERE USER_ID = #{userId, jdbcType=VARCHAR}
   	</update>
</mapper>